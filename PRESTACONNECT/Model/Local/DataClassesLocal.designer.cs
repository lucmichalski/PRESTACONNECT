#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PRESTACONNECT.Model.Local
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PRESTACONNECT")]
	public partial class DataClassesLocalDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertAddress(Address instance);
    partial void UpdateAddress(Address instance);
    partial void DeleteAddress(Address instance);
    partial void InsertArticleCatalog(ArticleCatalog instance);
    partial void UpdateArticleCatalog(ArticleCatalog instance);
    partial void DeleteArticleCatalog(ArticleCatalog instance);
    partial void InsertAttributeArticleImage(AttributeArticleImage instance);
    partial void UpdateAttributeArticleImage(AttributeArticleImage instance);
    partial void DeleteAttributeArticleImage(AttributeArticleImage instance);
    partial void InsertCarrier(Carrier instance);
    partial void UpdateCarrier(Carrier instance);
    partial void DeleteCarrier(Carrier instance);
    partial void InsertCatalog(Catalog instance);
    partial void UpdateCatalog(Catalog instance);
    partial void DeleteCatalog(Catalog instance);
    partial void InsertCatalogImage(CatalogImage instance);
    partial void UpdateCatalogImage(CatalogImage instance);
    partial void DeleteCatalogImage(CatalogImage instance);
    partial void InsertCharacteristic(Characteristic instance);
    partial void UpdateCharacteristic(Characteristic instance);
    partial void DeleteCharacteristic(Characteristic instance);
    partial void InsertConfig(Config instance);
    partial void UpdateConfig(Config instance);
    partial void DeleteConfig(Config instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertOrderMail(OrderMail instance);
    partial void UpdateOrderMail(OrderMail instance);
    partial void DeleteOrderMail(OrderMail instance);
    partial void InsertSupplier(Supplier instance);
    partial void UpdateSupplier(Supplier instance);
    partial void DeleteSupplier(Supplier instance);
    partial void InsertSupply(Supply instance);
    partial void UpdateSupply(Supply instance);
    partial void DeleteSupply(Supply instance);
    partial void InsertArticleImage(ArticleImage instance);
    partial void UpdateArticleImage(ArticleImage instance);
    partial void DeleteArticleImage(ArticleImage instance);
    partial void InsertGroup(Group instance);
    partial void UpdateGroup(Group instance);
    partial void DeleteGroup(Group instance);
    partial void InsertInformationLibre(InformationLibre instance);
    partial void UpdateInformationLibre(InformationLibre instance);
    partial void DeleteInformationLibre(InformationLibre instance);
    partial void InsertSettlement(Settlement instance);
    partial void UpdateSettlement(Settlement instance);
    partial void DeleteSettlement(Settlement instance);
    partial void InsertOrderPayment(OrderPayment instance);
    partial void UpdateOrderPayment(OrderPayment instance);
    partial void DeleteOrderPayment(OrderPayment instance);
    partial void InsertStatistiqueArticle(StatistiqueArticle instance);
    partial void UpdateStatistiqueArticle(StatistiqueArticle instance);
    partial void DeleteStatistiqueArticle(StatistiqueArticle instance);
    partial void InsertReplacement(Replacement instance);
    partial void UpdateReplacement(Replacement instance);
    partial void DeleteReplacement(Replacement instance);
    partial void InsertInformationLibreClient(InformationLibreClient instance);
    partial void UpdateInformationLibreClient(InformationLibreClient instance);
    partial void DeleteInformationLibreClient(InformationLibreClient instance);
    partial void InsertStatistiqueClient(StatistiqueClient instance);
    partial void UpdateStatistiqueClient(StatistiqueClient instance);
    partial void DeleteStatistiqueClient(StatistiqueClient instance);
    partial void InsertInformationArticle(InformationArticle instance);
    partial void UpdateInformationArticle(InformationArticle instance);
    partial void DeleteInformationArticle(InformationArticle instance);
    partial void InsertMediaAssignmentRule(MediaAssignmentRule instance);
    partial void UpdateMediaAssignmentRule(MediaAssignmentRule instance);
    partial void DeleteMediaAssignmentRule(MediaAssignmentRule instance);
    partial void InsertAttribute(Attribute instance);
    partial void UpdateAttribute(Attribute instance);
    partial void DeleteAttribute(Attribute instance);
    partial void InsertAttributeGroup(AttributeGroup instance);
    partial void UpdateAttributeGroup(AttributeGroup instance);
    partial void DeleteAttributeGroup(AttributeGroup instance);
    partial void InsertConditioningGroup(ConditioningGroup instance);
    partial void UpdateConditioningGroup(ConditioningGroup instance);
    partial void DeleteConditioningGroup(ConditioningGroup instance);
    partial void InsertConditioningArticle(ConditioningArticle instance);
    partial void UpdateConditioningArticle(ConditioningArticle instance);
    partial void DeleteConditioningArticle(ConditioningArticle instance);
    partial void InsertConditioning(Conditioning instance);
    partial void UpdateConditioning(Conditioning instance);
    partial void DeleteConditioning(Conditioning instance);
    partial void InsertInformationLibreArticle(InformationLibreArticle instance);
    partial void UpdateInformationLibreArticle(InformationLibreArticle instance);
    partial void DeleteInformationLibreArticle(InformationLibreArticle instance);
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertAttachment(Attachment instance);
    partial void UpdateAttachment(Attachment instance);
    partial void DeleteAttachment(Attachment instance);
    partial void InsertGroup_CRisque(Group_CRisque instance);
    partial void UpdateGroup_CRisque(Group_CRisque instance);
    partial void DeleteGroup_CRisque(Group_CRisque instance);
    partial void InsertEmployee_Collaborateur(Employee_Collaborateur instance);
    partial void UpdateEmployee_Collaborateur(Employee_Collaborateur instance);
    partial void DeleteEmployee_Collaborateur(Employee_Collaborateur instance);
    partial void InsertCompositionArticleAttribute(CompositionArticleAttribute instance);
    partial void UpdateCompositionArticleAttribute(CompositionArticleAttribute instance);
    partial void DeleteCompositionArticleAttribute(CompositionArticleAttribute instance);
    partial void InsertCompositionArticleAttributeGroup(CompositionArticleAttributeGroup instance);
    partial void UpdateCompositionArticleAttributeGroup(CompositionArticleAttributeGroup instance);
    partial void DeleteCompositionArticleAttributeGroup(CompositionArticleAttributeGroup instance);
    partial void InsertCompositionArticle(CompositionArticle instance);
    partial void UpdateCompositionArticle(CompositionArticle instance);
    partial void DeleteCompositionArticle(CompositionArticle instance);
    partial void InsertCompositionArticleImage(CompositionArticleImage instance);
    partial void UpdateCompositionArticleImage(CompositionArticleImage instance);
    partial void DeleteCompositionArticleImage(CompositionArticleImage instance);
    partial void InsertTax(Tax instance);
    partial void UpdateTax(Tax instance);
    partial void DeleteTax(Tax instance);
    partial void InsertArticle(Article instance);
    partial void UpdateArticle(Article instance);
    partial void DeleteArticle(Article instance);
    partial void InsertArticle_Sync_Infos(Article_Sync_Infos instance);
    partial void UpdateArticle_Sync_Infos(Article_Sync_Infos instance);
    partial void DeleteArticle_Sync_Infos(Article_Sync_Infos instance);
    partial void InsertImportSageFilter(ImportSageFilter instance);
    partial void UpdateImportSageFilter(ImportSageFilter instance);
    partial void DeleteImportSageFilter(ImportSageFilter instance);
    partial void InsertAttributeArticle(AttributeArticle instance);
    partial void UpdateAttributeArticle(AttributeArticle instance);
    partial void DeleteAttributeArticle(AttributeArticle instance);
    partial void InsertArticleAdditionalField(ArticleAdditionalField instance);
    partial void UpdateArticleAdditionalField(ArticleAdditionalField instance);
    partial void DeleteArticleAdditionalField(ArticleAdditionalField instance);
    partial void InsertOrderMacketplace(OrderMacketplace instance);
    partial void UpdateOrderMacketplace(OrderMacketplace instance);
    partial void DeleteOrderMacketplace(OrderMacketplace instance);
    partial void InsertOrderCartRule(OrderCartRule instance);
    partial void UpdateOrderCartRule(OrderCartRule instance);
    partial void DeleteOrderCartRule(OrderCartRule instance);
    #endregion
		
		public DataClassesLocalDataContext() : 
				base(global::PRESTACONNECT.Properties.Settings.Default.PRESTACONNECTConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesLocalDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesLocalDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesLocalDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesLocalDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Address> Address
		{
			get
			{
				return this.GetTable<Address>();
			}
		}
		
		public System.Data.Linq.Table<ArticleCatalog> ArticleCatalog
		{
			get
			{
				return this.GetTable<ArticleCatalog>();
			}
		}
		
		public System.Data.Linq.Table<AttributeArticleImage> AttributeArticleImage
		{
			get
			{
				return this.GetTable<AttributeArticleImage>();
			}
		}
		
		public System.Data.Linq.Table<Carrier> Carrier
		{
			get
			{
				return this.GetTable<Carrier>();
			}
		}
		
		public System.Data.Linq.Table<Catalog> Catalog
		{
			get
			{
				return this.GetTable<Catalog>();
			}
		}
		
		public System.Data.Linq.Table<CatalogImage> CatalogImage
		{
			get
			{
				return this.GetTable<CatalogImage>();
			}
		}
		
		public System.Data.Linq.Table<Characteristic> Characteristic
		{
			get
			{
				return this.GetTable<Characteristic>();
			}
		}
		
		public System.Data.Linq.Table<Config> Config
		{
			get
			{
				return this.GetTable<Config>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customer
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Order> Order
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<OrderMail> OrderMail
		{
			get
			{
				return this.GetTable<OrderMail>();
			}
		}
		
		public System.Data.Linq.Table<Supplier> Supplier
		{
			get
			{
				return this.GetTable<Supplier>();
			}
		}
		
		public System.Data.Linq.Table<Supply> Supply
		{
			get
			{
				return this.GetTable<Supply>();
			}
		}
		
		public System.Data.Linq.Table<ArticleImage> ArticleImage
		{
			get
			{
				return this.GetTable<ArticleImage>();
			}
		}
		
		public System.Data.Linq.Table<Group> Group
		{
			get
			{
				return this.GetTable<Group>();
			}
		}
		
		public System.Data.Linq.Table<InformationLibre> InformationLibre
		{
			get
			{
				return this.GetTable<InformationLibre>();
			}
		}
		
		public System.Data.Linq.Table<Settlement> Settlement
		{
			get
			{
				return this.GetTable<Settlement>();
			}
		}
		
		public System.Data.Linq.Table<OrderPayment> OrderPayment
		{
			get
			{
				return this.GetTable<OrderPayment>();
			}
		}
		
		public System.Data.Linq.Table<StatistiqueArticle> StatistiqueArticle
		{
			get
			{
				return this.GetTable<StatistiqueArticle>();
			}
		}
		
		public System.Data.Linq.Table<Replacement> Replacement
		{
			get
			{
				return this.GetTable<Replacement>();
			}
		}
		
		public System.Data.Linq.Table<InformationLibreClient> InformationLibreClient
		{
			get
			{
				return this.GetTable<InformationLibreClient>();
			}
		}
		
		public System.Data.Linq.Table<StatistiqueClient> StatistiqueClient
		{
			get
			{
				return this.GetTable<StatistiqueClient>();
			}
		}
		
		public System.Data.Linq.Table<InformationArticle> InformationArticle
		{
			get
			{
				return this.GetTable<InformationArticle>();
			}
		}
		
		public System.Data.Linq.Table<MediaAssignmentRule> MediaAssignmentRule
		{
			get
			{
				return this.GetTable<MediaAssignmentRule>();
			}
		}
		
		public System.Data.Linq.Table<Attribute> Attribute
		{
			get
			{
				return this.GetTable<Attribute>();
			}
		}
		
		public System.Data.Linq.Table<AttributeGroup> AttributeGroup
		{
			get
			{
				return this.GetTable<AttributeGroup>();
			}
		}
		
		public System.Data.Linq.Table<ConditioningGroup> ConditioningGroup
		{
			get
			{
				return this.GetTable<ConditioningGroup>();
			}
		}
		
		public System.Data.Linq.Table<ConditioningArticle> ConditioningArticle
		{
			get
			{
				return this.GetTable<ConditioningArticle>();
			}
		}
		
		public System.Data.Linq.Table<Conditioning> Conditioning
		{
			get
			{
				return this.GetTable<Conditioning>();
			}
		}
		
		public System.Data.Linq.Table<InformationLibreArticle> InformationLibreArticle
		{
			get
			{
				return this.GetTable<InformationLibreArticle>();
			}
		}
		
		public System.Data.Linq.Table<Country> Country
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<Attachment> Attachment
		{
			get
			{
				return this.GetTable<Attachment>();
			}
		}
		
		public System.Data.Linq.Table<Group_CRisque> Group_CRisque
		{
			get
			{
				return this.GetTable<Group_CRisque>();
			}
		}
		
		public System.Data.Linq.Table<Employee_Collaborateur> Employee_Collaborateur
		{
			get
			{
				return this.GetTable<Employee_Collaborateur>();
			}
		}
		
		public System.Data.Linq.Table<CompositionArticleAttribute> CompositionArticleAttribute
		{
			get
			{
				return this.GetTable<CompositionArticleAttribute>();
			}
		}
		
		public System.Data.Linq.Table<CompositionArticleAttributeGroup> CompositionArticleAttributeGroup
		{
			get
			{
				return this.GetTable<CompositionArticleAttributeGroup>();
			}
		}
		
		public System.Data.Linq.Table<CompositionArticle> CompositionArticle
		{
			get
			{
				return this.GetTable<CompositionArticle>();
			}
		}
		
		public System.Data.Linq.Table<CompositionArticleImage> CompositionArticleImage
		{
			get
			{
				return this.GetTable<CompositionArticleImage>();
			}
		}
		
		public System.Data.Linq.Table<Tax> Tax
		{
			get
			{
				return this.GetTable<Tax>();
			}
		}
		
		public System.Data.Linq.Table<Article> Article
		{
			get
			{
				return this.GetTable<Article>();
			}
		}
		
		public System.Data.Linq.Table<Article_Sync_Infos> Article_Sync_Infos
		{
			get
			{
				return this.GetTable<Article_Sync_Infos>();
			}
		}
		
		public System.Data.Linq.Table<ImportSageFilter> ImportSageFilter
		{
			get
			{
				return this.GetTable<ImportSageFilter>();
			}
		}
		
		public System.Data.Linq.Table<AttributeArticle> AttributeArticle
		{
			get
			{
				return this.GetTable<AttributeArticle>();
			}
		}
		
		public System.Data.Linq.Table<ArticleAdditionalField> ArticleAdditionalField
		{
			get
			{
				return this.GetTable<ArticleAdditionalField>();
			}
		}
		
		public System.Data.Linq.Table<OrderMacketplace> OrderMacketplace
		{
			get
			{
				return this.GetTable<OrderMacketplace>();
			}
		}
		
		public System.Data.Linq.Table<OrderCartRule> OrderCartRule
		{
			get
			{
				return this.GetTable<OrderCartRule>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Address")]
	public partial class Address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Pre_Id;
		
		private int _Sag_Id;
		
		private System.DateTime _Add_Date;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPre_IdChanging(int value);
    partial void OnPre_IdChanged();
    partial void OnSag_IdChanging(int value);
    partial void OnSag_IdChanged();
    partial void OnAdd_DateChanging(System.DateTime value);
    partial void OnAdd_DateChanged();
    #endregion
		
		public Address()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pre_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Pre_Id
		{
			get
			{
				return this._Pre_Id;
			}
			set
			{
				if ((this._Pre_Id != value))
				{
					this.OnPre_IdChanging(value);
					this.SendPropertyChanging();
					this._Pre_Id = value;
					this.SendPropertyChanged("Pre_Id");
					this.OnPre_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Sag_Id
		{
			get
			{
				return this._Sag_Id;
			}
			set
			{
				if ((this._Sag_Id != value))
				{
					this.OnSag_IdChanging(value);
					this.SendPropertyChanging();
					this._Sag_Id = value;
					this.SendPropertyChanged("Sag_Id");
					this.OnSag_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Add_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Add_Date
		{
			get
			{
				return this._Add_Date;
			}
			set
			{
				if ((this._Add_Date != value))
				{
					this.OnAdd_DateChanging(value);
					this.SendPropertyChanging();
					this._Add_Date = value;
					this.SendPropertyChanged("Add_Date");
					this.OnAdd_DateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArticleCatalog")]
	public partial class ArticleCatalog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Art_Id;
		
		private int _Cat_Id;
		
		private EntityRef<Catalog> _Catalog;
		
		private EntityRef<Article> _Article;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArt_IdChanging(int value);
    partial void OnArt_IdChanged();
    partial void OnCat_IdChanging(int value);
    partial void OnCat_IdChanged();
    #endregion
		
		public ArticleCatalog()
		{
			this._Catalog = default(EntityRef<Catalog>);
			this._Article = default(EntityRef<Article>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Art_Id
		{
			get
			{
				return this._Art_Id;
			}
			set
			{
				if ((this._Art_Id != value))
				{
					if (this._Article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArt_IdChanging(value);
					this.SendPropertyChanging();
					this._Art_Id = value;
					this.SendPropertyChanged("Art_Id");
					this.OnArt_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cat_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Cat_Id
		{
			get
			{
				return this._Cat_Id;
			}
			set
			{
				if ((this._Cat_Id != value))
				{
					if (this._Catalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCat_IdChanging(value);
					this.SendPropertyChanging();
					this._Cat_Id = value;
					this.SendPropertyChanged("Cat_Id");
					this.OnCat_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catalog_ArticleCatalog", Storage="_Catalog", ThisKey="Cat_Id", OtherKey="Cat_Id", IsForeignKey=true)]
		public Catalog Catalog
		{
			get
			{
				return this._Catalog.Entity;
			}
			set
			{
				Catalog previousValue = this._Catalog.Entity;
				if (((previousValue != value) 
							|| (this._Catalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Catalog.Entity = null;
						previousValue.ArticleCatalog.Remove(this);
					}
					this._Catalog.Entity = value;
					if ((value != null))
					{
						value.ArticleCatalog.Add(this);
						this._Cat_Id = value.Cat_Id;
					}
					else
					{
						this._Cat_Id = default(int);
					}
					this.SendPropertyChanged("Catalog");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_ArticleCatalog", Storage="_Article", ThisKey="Art_Id", OtherKey="Art_Id", IsForeignKey=true)]
		public Article Article
		{
			get
			{
				return this._Article.Entity;
			}
			set
			{
				Article previousValue = this._Article.Entity;
				if (((previousValue != value) 
							|| (this._Article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Article.Entity = null;
						previousValue.ArticleCatalog.Remove(this);
					}
					this._Article.Entity = value;
					if ((value != null))
					{
						value.ArticleCatalog.Add(this);
						this._Art_Id = value.Art_Id;
					}
					else
					{
						this._Art_Id = default(int);
					}
					this.SendPropertyChanged("Article");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AttributeArticleImage")]
	public partial class AttributeArticleImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AttArt_Id;
		
		private int _ImaArt_Id;
		
		private EntityRef<ArticleImage> _ArticleImage;
		
		private EntityRef<AttributeArticle> _AttributeArticle;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttArt_IdChanging(int value);
    partial void OnAttArt_IdChanged();
    partial void OnImaArt_IdChanging(int value);
    partial void OnImaArt_IdChanged();
    #endregion
		
		public AttributeArticleImage()
		{
			this._ArticleImage = default(EntityRef<ArticleImage>);
			this._AttributeArticle = default(EntityRef<AttributeArticle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttArt_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AttArt_Id
		{
			get
			{
				return this._AttArt_Id;
			}
			set
			{
				if ((this._AttArt_Id != value))
				{
					if (this._AttributeArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttArt_IdChanging(value);
					this.SendPropertyChanging();
					this._AttArt_Id = value;
					this.SendPropertyChanged("AttArt_Id");
					this.OnAttArt_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImaArt_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ImaArt_Id
		{
			get
			{
				return this._ImaArt_Id;
			}
			set
			{
				if ((this._ImaArt_Id != value))
				{
					if (this._ArticleImage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImaArt_IdChanging(value);
					this.SendPropertyChanging();
					this._ImaArt_Id = value;
					this.SendPropertyChanged("ImaArt_Id");
					this.OnImaArt_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArticleImage_AttributeArticleImage", Storage="_ArticleImage", ThisKey="ImaArt_Id", OtherKey="ImaArt_Id", IsForeignKey=true)]
		public ArticleImage ArticleImage
		{
			get
			{
				return this._ArticleImage.Entity;
			}
			set
			{
				ArticleImage previousValue = this._ArticleImage.Entity;
				if (((previousValue != value) 
							|| (this._ArticleImage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ArticleImage.Entity = null;
						previousValue.AttributeArticleImage.Remove(this);
					}
					this._ArticleImage.Entity = value;
					if ((value != null))
					{
						value.AttributeArticleImage.Add(this);
						this._ImaArt_Id = value.ImaArt_Id;
					}
					else
					{
						this._ImaArt_Id = default(int);
					}
					this.SendPropertyChanged("ArticleImage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AttributeArticle_AttributeArticleImage", Storage="_AttributeArticle", ThisKey="AttArt_Id", OtherKey="AttArt_Id", IsForeignKey=true)]
		public AttributeArticle AttributeArticle
		{
			get
			{
				return this._AttributeArticle.Entity;
			}
			set
			{
				AttributeArticle previousValue = this._AttributeArticle.Entity;
				if (((previousValue != value) 
							|| (this._AttributeArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AttributeArticle.Entity = null;
						previousValue.AttributeArticleImage.Remove(this);
					}
					this._AttributeArticle.Entity = value;
					if ((value != null))
					{
						value.AttributeArticleImage.Add(this);
						this._AttArt_Id = value.AttArt_Id;
					}
					else
					{
						this._AttArt_Id = default(int);
					}
					this.SendPropertyChanged("AttributeArticle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Carrier")]
	public partial class Carrier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Pre_Id;
		
		private int _Sag_Id;
		
		private string _Sag_Name;
		
		private string _Pre_Name;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPre_IdChanging(int value);
    partial void OnPre_IdChanged();
    partial void OnSag_IdChanging(int value);
    partial void OnSag_IdChanged();
    partial void OnSag_NameChanging(string value);
    partial void OnSag_NameChanged();
    partial void OnPre_NameChanging(string value);
    partial void OnPre_NameChanged();
    #endregion
		
		public Carrier()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pre_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Pre_Id
		{
			get
			{
				return this._Pre_Id;
			}
			set
			{
				if ((this._Pre_Id != value))
				{
					this.OnPre_IdChanging(value);
					this.SendPropertyChanging();
					this._Pre_Id = value;
					this.SendPropertyChanged("Pre_Id");
					this.OnPre_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Sag_Id
		{
			get
			{
				return this._Sag_Id;
			}
			set
			{
				if ((this._Sag_Id != value))
				{
					this.OnSag_IdChanging(value);
					this.SendPropertyChanging();
					this._Sag_Id = value;
					this.SendPropertyChanged("Sag_Id");
					this.OnSag_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_Name", DbType="VarChar(35) NOT NULL", CanBeNull=false)]
		public string Sag_Name
		{
			get
			{
				return this._Sag_Name;
			}
			set
			{
				if ((this._Sag_Name != value))
				{
					this.OnSag_NameChanging(value);
					this.SendPropertyChanging();
					this._Sag_Name = value;
					this.SendPropertyChanged("Sag_Name");
					this.OnSag_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pre_Name", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Pre_Name
		{
			get
			{
				return this._Pre_Name;
			}
			set
			{
				if ((this._Pre_Name != value))
				{
					this.OnPre_NameChanging(value);
					this.SendPropertyChanging();
					this._Pre_Name = value;
					this.SendPropertyChanged("Pre_Name");
					this.OnPre_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalog")]
	public partial class Catalog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Cat_Id;
		
		private string _Cat_Name;
		
		private string _Cat_Description;
		
		private int _Cat_Level;
		
		private int _Cat_Parent;
		
		private string _Cat_MetaTitle;
		
		private string _Cat_MetaDescription;
		
		private string _Cat_MetaKeyword;
		
		private string _Cat_LinkRewrite;
		
		private bool _Cat_Active;
		
		private bool _Cat_Sync;
		
		private System.DateTime _Cat_Date;
		
		private int _Sag_Id;
		
		private System.Nullable<int> _Pre_Id;
		
		private EntitySet<ArticleCatalog> _ArticleCatalog;
		
		private EntitySet<Catalog> _Catalog2;
		
		private EntitySet<CatalogImage> _CatalogImage;
		
		private EntitySet<Article> _Article;
		
		private EntityRef<Catalog> _Catalog1;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCat_IdChanging(int value);
    partial void OnCat_IdChanged();
    partial void OnCat_NameChanging(string value);
    partial void OnCat_NameChanged();
    partial void OnCat_DescriptionChanging(string value);
    partial void OnCat_DescriptionChanged();
    partial void OnCat_LevelChanging(int value);
    partial void OnCat_LevelChanged();
    partial void OnCat_ParentChanging(int value);
    partial void OnCat_ParentChanged();
    partial void OnCat_MetaTitleChanging(string value);
    partial void OnCat_MetaTitleChanged();
    partial void OnCat_MetaDescriptionChanging(string value);
    partial void OnCat_MetaDescriptionChanged();
    partial void OnCat_MetaKeywordChanging(string value);
    partial void OnCat_MetaKeywordChanged();
    partial void OnCat_LinkRewriteChanging(string value);
    partial void OnCat_LinkRewriteChanged();
    partial void OnCat_ActiveChanging(bool value);
    partial void OnCat_ActiveChanged();
    partial void OnCat_SyncChanging(bool value);
    partial void OnCat_SyncChanged();
    partial void OnCat_DateChanging(System.DateTime value);
    partial void OnCat_DateChanged();
    partial void OnSag_IdChanging(int value);
    partial void OnSag_IdChanged();
    partial void OnPre_IdChanging(System.Nullable<int> value);
    partial void OnPre_IdChanged();
    #endregion
		
		public Catalog()
		{
			this._ArticleCatalog = new EntitySet<ArticleCatalog>(new Action<ArticleCatalog>(this.attach_ArticleCatalog), new Action<ArticleCatalog>(this.detach_ArticleCatalog));
			this._Catalog2 = new EntitySet<Catalog>(new Action<Catalog>(this.attach_Catalog2), new Action<Catalog>(this.detach_Catalog2));
			this._CatalogImage = new EntitySet<CatalogImage>(new Action<CatalogImage>(this.attach_CatalogImage), new Action<CatalogImage>(this.detach_CatalogImage));
			this._Article = new EntitySet<Article>(new Action<Article>(this.attach_Article), new Action<Article>(this.detach_Article));
			this._Catalog1 = default(EntityRef<Catalog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cat_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Cat_Id
		{
			get
			{
				return this._Cat_Id;
			}
			set
			{
				if ((this._Cat_Id != value))
				{
					this.OnCat_IdChanging(value);
					this.SendPropertyChanging();
					this._Cat_Id = value;
					this.SendPropertyChanged("Cat_Id");
					this.OnCat_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cat_Name", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string Cat_Name
		{
			get
			{
				return this._Cat_Name;
			}
			set
			{
				if ((this._Cat_Name != value))
				{
					this.OnCat_NameChanging(value);
					this.SendPropertyChanging();
					this._Cat_Name = value;
					this.SendPropertyChanged("Cat_Name");
					this.OnCat_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cat_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Cat_Description
		{
			get
			{
				return this._Cat_Description;
			}
			set
			{
				if ((this._Cat_Description != value))
				{
					this.OnCat_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Cat_Description = value;
					this.SendPropertyChanged("Cat_Description");
					this.OnCat_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cat_Level", DbType="Int NOT NULL")]
		public int Cat_Level
		{
			get
			{
				return this._Cat_Level;
			}
			set
			{
				if ((this._Cat_Level != value))
				{
					this.OnCat_LevelChanging(value);
					this.SendPropertyChanging();
					this._Cat_Level = value;
					this.SendPropertyChanged("Cat_Level");
					this.OnCat_LevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cat_Parent", DbType="Int NOT NULL")]
		public int Cat_Parent
		{
			get
			{
				return this._Cat_Parent;
			}
			set
			{
				if ((this._Cat_Parent != value))
				{
					if (this._Catalog1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCat_ParentChanging(value);
					this.SendPropertyChanging();
					this._Cat_Parent = value;
					this.SendPropertyChanged("Cat_Parent");
					this.OnCat_ParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cat_MetaTitle", DbType="VarChar(128)")]
		public string Cat_MetaTitle
		{
			get
			{
				return this._Cat_MetaTitle;
			}
			set
			{
				if ((this._Cat_MetaTitle != value))
				{
					this.OnCat_MetaTitleChanging(value);
					this.SendPropertyChanging();
					this._Cat_MetaTitle = value;
					this.SendPropertyChanged("Cat_MetaTitle");
					this.OnCat_MetaTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cat_MetaDescription", DbType="VarChar(255)")]
		public string Cat_MetaDescription
		{
			get
			{
				return this._Cat_MetaDescription;
			}
			set
			{
				if ((this._Cat_MetaDescription != value))
				{
					this.OnCat_MetaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Cat_MetaDescription = value;
					this.SendPropertyChanged("Cat_MetaDescription");
					this.OnCat_MetaDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cat_MetaKeyword", DbType="VarChar(255)")]
		public string Cat_MetaKeyword
		{
			get
			{
				return this._Cat_MetaKeyword;
			}
			set
			{
				if ((this._Cat_MetaKeyword != value))
				{
					this.OnCat_MetaKeywordChanging(value);
					this.SendPropertyChanging();
					this._Cat_MetaKeyword = value;
					this.SendPropertyChanged("Cat_MetaKeyword");
					this.OnCat_MetaKeywordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cat_LinkRewrite", DbType="VarChar(128)")]
		public string Cat_LinkRewrite
		{
			get
			{
				return this._Cat_LinkRewrite;
			}
			set
			{
				if ((this._Cat_LinkRewrite != value))
				{
					this.OnCat_LinkRewriteChanging(value);
					this.SendPropertyChanging();
					this._Cat_LinkRewrite = value;
					this.SendPropertyChanged("Cat_LinkRewrite");
					this.OnCat_LinkRewriteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cat_Active", DbType="Bit NOT NULL")]
		public bool Cat_Active
		{
			get
			{
				return this._Cat_Active;
			}
			set
			{
				if ((this._Cat_Active != value))
				{
					this.OnCat_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Cat_Active = value;
					this.SendPropertyChanged("Cat_Active");
					this.OnCat_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cat_Sync", DbType="Bit NOT NULL")]
		public bool Cat_Sync
		{
			get
			{
				return this._Cat_Sync;
			}
			set
			{
				if ((this._Cat_Sync != value))
				{
					this.OnCat_SyncChanging(value);
					this.SendPropertyChanging();
					this._Cat_Sync = value;
					this.SendPropertyChanged("Cat_Sync");
					this.OnCat_SyncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cat_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Cat_Date
		{
			get
			{
				return this._Cat_Date;
			}
			set
			{
				if ((this._Cat_Date != value))
				{
					this.OnCat_DateChanging(value);
					this.SendPropertyChanging();
					this._Cat_Date = value;
					this.SendPropertyChanged("Cat_Date");
					this.OnCat_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_Id", DbType="Int NOT NULL")]
		public int Sag_Id
		{
			get
			{
				return this._Sag_Id;
			}
			set
			{
				if ((this._Sag_Id != value))
				{
					this.OnSag_IdChanging(value);
					this.SendPropertyChanging();
					this._Sag_Id = value;
					this.SendPropertyChanged("Sag_Id");
					this.OnSag_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pre_Id", DbType="Int")]
		public System.Nullable<int> Pre_Id
		{
			get
			{
				return this._Pre_Id;
			}
			set
			{
				if ((this._Pre_Id != value))
				{
					this.OnPre_IdChanging(value);
					this.SendPropertyChanging();
					this._Pre_Id = value;
					this.SendPropertyChanged("Pre_Id");
					this.OnPre_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catalog_ArticleCatalog", Storage="_ArticleCatalog", ThisKey="Cat_Id", OtherKey="Cat_Id")]
		public EntitySet<ArticleCatalog> ArticleCatalog
		{
			get
			{
				return this._ArticleCatalog;
			}
			set
			{
				this._ArticleCatalog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catalog_Catalog", Storage="_Catalog2", ThisKey="Cat_Id", OtherKey="Cat_Parent")]
		public EntitySet<Catalog> Catalog2
		{
			get
			{
				return this._Catalog2;
			}
			set
			{
				this._Catalog2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catalog_CatalogImage", Storage="_CatalogImage", ThisKey="Cat_Id", OtherKey="Cat_Id")]
		public EntitySet<CatalogImage> CatalogImage
		{
			get
			{
				return this._CatalogImage;
			}
			set
			{
				this._CatalogImage.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catalog_Article", Storage="_Article", ThisKey="Cat_Id", OtherKey="Cat_Id")]
		public EntitySet<Article> Article
		{
			get
			{
				return this._Article;
			}
			set
			{
				this._Article.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catalog_Catalog", Storage="_Catalog1", ThisKey="Cat_Parent", OtherKey="Cat_Id", IsForeignKey=true)]
		public Catalog Catalog1
		{
			get
			{
				return this._Catalog1.Entity;
			}
			set
			{
				Catalog previousValue = this._Catalog1.Entity;
				if (((previousValue != value) 
							|| (this._Catalog1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Catalog1.Entity = null;
						previousValue.Catalog2.Remove(this);
					}
					this._Catalog1.Entity = value;
					if ((value != null))
					{
						value.Catalog2.Add(this);
						this._Cat_Parent = value.Cat_Id;
					}
					else
					{
						this._Cat_Parent = default(int);
					}
					this.SendPropertyChanged("Catalog1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ArticleCatalog(ArticleCatalog entity)
		{
			this.SendPropertyChanging();
			entity.Catalog = this;
		}
		
		private void detach_ArticleCatalog(ArticleCatalog entity)
		{
			this.SendPropertyChanging();
			entity.Catalog = null;
		}
		
		private void attach_Catalog2(Catalog entity)
		{
			this.SendPropertyChanging();
			entity.Catalog1 = this;
		}
		
		private void detach_Catalog2(Catalog entity)
		{
			this.SendPropertyChanging();
			entity.Catalog1 = null;
		}
		
		private void attach_CatalogImage(CatalogImage entity)
		{
			this.SendPropertyChanging();
			entity.Catalog = this;
		}
		
		private void detach_CatalogImage(CatalogImage entity)
		{
			this.SendPropertyChanging();
			entity.Catalog = null;
		}
		
		private void attach_Article(Article entity)
		{
			this.SendPropertyChanging();
			entity.Catalog = this;
		}
		
		private void detach_Article(Article entity)
		{
			this.SendPropertyChanging();
			entity.Catalog = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatalogImage")]
	public partial class CatalogImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ImaCat_Id;
		
		private string _ImaCat_Image;
		
		private bool _ImaCat_Default;
		
		private int _Cat_Id;
		
		private EntityRef<Catalog> _Catalog;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImaCat_IdChanging(int value);
    partial void OnImaCat_IdChanged();
    partial void OnImaCat_ImageChanging(string value);
    partial void OnImaCat_ImageChanged();
    partial void OnImaCat_DefaultChanging(bool value);
    partial void OnImaCat_DefaultChanged();
    partial void OnCat_IdChanging(int value);
    partial void OnCat_IdChanged();
    #endregion
		
		public CatalogImage()
		{
			this._Catalog = default(EntityRef<Catalog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImaCat_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ImaCat_Id
		{
			get
			{
				return this._ImaCat_Id;
			}
			set
			{
				if ((this._ImaCat_Id != value))
				{
					this.OnImaCat_IdChanging(value);
					this.SendPropertyChanging();
					this._ImaCat_Id = value;
					this.SendPropertyChanged("ImaCat_Id");
					this.OnImaCat_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImaCat_Image", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string ImaCat_Image
		{
			get
			{
				return this._ImaCat_Image;
			}
			set
			{
				if ((this._ImaCat_Image != value))
				{
					this.OnImaCat_ImageChanging(value);
					this.SendPropertyChanging();
					this._ImaCat_Image = value;
					this.SendPropertyChanged("ImaCat_Image");
					this.OnImaCat_ImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImaCat_Default", DbType="Bit NOT NULL")]
		public bool ImaCat_Default
		{
			get
			{
				return this._ImaCat_Default;
			}
			set
			{
				if ((this._ImaCat_Default != value))
				{
					this.OnImaCat_DefaultChanging(value);
					this.SendPropertyChanging();
					this._ImaCat_Default = value;
					this.SendPropertyChanged("ImaCat_Default");
					this.OnImaCat_DefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cat_Id", DbType="Int NOT NULL")]
		public int Cat_Id
		{
			get
			{
				return this._Cat_Id;
			}
			set
			{
				if ((this._Cat_Id != value))
				{
					if (this._Catalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCat_IdChanging(value);
					this.SendPropertyChanging();
					this._Cat_Id = value;
					this.SendPropertyChanged("Cat_Id");
					this.OnCat_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catalog_CatalogImage", Storage="_Catalog", ThisKey="Cat_Id", OtherKey="Cat_Id", IsForeignKey=true)]
		public Catalog Catalog
		{
			get
			{
				return this._Catalog.Entity;
			}
			set
			{
				Catalog previousValue = this._Catalog.Entity;
				if (((previousValue != value) 
							|| (this._Catalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Catalog.Entity = null;
						previousValue.CatalogImage.Remove(this);
					}
					this._Catalog.Entity = value;
					if ((value != null))
					{
						value.CatalogImage.Add(this);
						this._Cat_Id = value.Cat_Id;
					}
					else
					{
						this._Cat_Id = default(int);
					}
					this.SendPropertyChanged("Catalog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Characteristic")]
	public partial class Characteristic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Cha_Id;
		
		private int _Cha_IdFeature;
		
		private string _Cha_Value;
		
		private bool _Cha_Custom;
		
		private int _Art_Id;
		
		private System.Nullable<int> _Pre_Id;
		
		private EntityRef<Article> _Article;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCha_IdChanging(int value);
    partial void OnCha_IdChanged();
    partial void OnCha_IdFeatureChanging(int value);
    partial void OnCha_IdFeatureChanged();
    partial void OnCha_ValueChanging(string value);
    partial void OnCha_ValueChanged();
    partial void OnCha_CustomChanging(bool value);
    partial void OnCha_CustomChanged();
    partial void OnArt_IdChanging(int value);
    partial void OnArt_IdChanged();
    partial void OnPre_IdChanging(System.Nullable<int> value);
    partial void OnPre_IdChanged();
    #endregion
		
		public Characteristic()
		{
			this._Article = default(EntityRef<Article>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cha_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Cha_Id
		{
			get
			{
				return this._Cha_Id;
			}
			set
			{
				if ((this._Cha_Id != value))
				{
					this.OnCha_IdChanging(value);
					this.SendPropertyChanging();
					this._Cha_Id = value;
					this.SendPropertyChanged("Cha_Id");
					this.OnCha_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cha_IdFeature", DbType="Int NOT NULL")]
		public int Cha_IdFeature
		{
			get
			{
				return this._Cha_IdFeature;
			}
			set
			{
				if ((this._Cha_IdFeature != value))
				{
					this.OnCha_IdFeatureChanging(value);
					this.SendPropertyChanging();
					this._Cha_IdFeature = value;
					this.SendPropertyChanged("Cha_IdFeature");
					this.OnCha_IdFeatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cha_Value", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Cha_Value
		{
			get
			{
				return this._Cha_Value;
			}
			set
			{
				if ((this._Cha_Value != value))
				{
					this.OnCha_ValueChanging(value);
					this.SendPropertyChanging();
					this._Cha_Value = value;
					this.SendPropertyChanged("Cha_Value");
					this.OnCha_ValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cha_Custom", DbType="Bit NOT NULL")]
		public bool Cha_Custom
		{
			get
			{
				return this._Cha_Custom;
			}
			set
			{
				if ((this._Cha_Custom != value))
				{
					this.OnCha_CustomChanging(value);
					this.SendPropertyChanging();
					this._Cha_Custom = value;
					this.SendPropertyChanged("Cha_Custom");
					this.OnCha_CustomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art_Id", DbType="Int NOT NULL")]
		public int Art_Id
		{
			get
			{
				return this._Art_Id;
			}
			set
			{
				if ((this._Art_Id != value))
				{
					if (this._Article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArt_IdChanging(value);
					this.SendPropertyChanging();
					this._Art_Id = value;
					this.SendPropertyChanged("Art_Id");
					this.OnArt_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pre_Id", DbType="Int")]
		public System.Nullable<int> Pre_Id
		{
			get
			{
				return this._Pre_Id;
			}
			set
			{
				if ((this._Pre_Id != value))
				{
					this.OnPre_IdChanging(value);
					this.SendPropertyChanging();
					this._Pre_Id = value;
					this.SendPropertyChanged("Pre_Id");
					this.OnPre_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_Characteristic", Storage="_Article", ThisKey="Art_Id", OtherKey="Art_Id", IsForeignKey=true)]
		public Article Article
		{
			get
			{
				return this._Article.Entity;
			}
			set
			{
				Article previousValue = this._Article.Entity;
				if (((previousValue != value) 
							|| (this._Article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Article.Entity = null;
						previousValue.Characteristic.Remove(this);
					}
					this._Article.Entity = value;
					if ((value != null))
					{
						value.Characteristic.Add(this);
						this._Art_Id = value.Art_Id;
					}
					else
					{
						this._Art_Id = default(int);
					}
					this.SendPropertyChanged("Article");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Config")]
	public partial class Config : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Con_Id;
		
		private string _Con_Name;
		
		private string _Con_Value;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCon_IdChanging(int value);
    partial void OnCon_IdChanged();
    partial void OnCon_NameChanging(string value);
    partial void OnCon_NameChanged();
    partial void OnCon_ValueChanging(string value);
    partial void OnCon_ValueChanged();
    #endregion
		
		public Config()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Con_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Con_Id
		{
			get
			{
				return this._Con_Id;
			}
			set
			{
				if ((this._Con_Id != value))
				{
					this.OnCon_IdChanging(value);
					this.SendPropertyChanging();
					this._Con_Id = value;
					this.SendPropertyChanged("Con_Id");
					this.OnCon_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Con_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Con_Name
		{
			get
			{
				return this._Con_Name;
			}
			set
			{
				if ((this._Con_Name != value))
				{
					this.OnCon_NameChanging(value);
					this.SendPropertyChanging();
					this._Con_Name = value;
					this.SendPropertyChanged("Con_Name");
					this.OnCon_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Con_Value", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Con_Value
		{
			get
			{
				return this._Con_Value;
			}
			set
			{
				if ((this._Con_Value != value))
				{
					this.OnCon_ValueChanging(value);
					this.SendPropertyChanging();
					this._Con_Value = value;
					this.SendPropertyChanged("Con_Value");
					this.OnCon_ValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Pre_Id;
		
		private int _Sag_Id;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPre_IdChanging(int value);
    partial void OnPre_IdChanged();
    partial void OnSag_IdChanging(int value);
    partial void OnSag_IdChanged();
    #endregion
		
		public Customer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pre_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Pre_Id
		{
			get
			{
				return this._Pre_Id;
			}
			set
			{
				if ((this._Pre_Id != value))
				{
					this.OnPre_IdChanging(value);
					this.SendPropertyChanging();
					this._Pre_Id = value;
					this.SendPropertyChanged("Pre_Id");
					this.OnPre_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Sag_Id
		{
			get
			{
				return this._Sag_Id;
			}
			set
			{
				if ((this._Sag_Id != value))
				{
					this.OnSag_IdChanging(value);
					this.SendPropertyChanging();
					this._Sag_Id = value;
					this.SendPropertyChanged("Sag_Id");
					this.OnSag_IdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Order]")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Pre_Id;
		
		private int _Sag_Id;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPre_IdChanging(int value);
    partial void OnPre_IdChanged();
    partial void OnSag_IdChanging(int value);
    partial void OnSag_IdChanged();
    #endregion
		
		public Order()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pre_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Pre_Id
		{
			get
			{
				return this._Pre_Id;
			}
			set
			{
				if ((this._Pre_Id != value))
				{
					this.OnPre_IdChanging(value);
					this.SendPropertyChanging();
					this._Pre_Id = value;
					this.SendPropertyChanged("Pre_Id");
					this.OnPre_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Sag_Id
		{
			get
			{
				return this._Sag_Id;
			}
			set
			{
				if ((this._Sag_Id != value))
				{
					this.OnSag_IdChanging(value);
					this.SendPropertyChanging();
					this._Sag_Id = value;
					this.SendPropertyChanged("Sag_Id");
					this.OnSag_IdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderMail")]
	public partial class OrderMail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrdMai_Id;
		
		private int _OrdMai_Type;
		
		private string _OrdMai_Header;
		
		private string _OrdMai_Content;
		
		private bool _OrdMai_Active;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrdMai_IdChanging(int value);
    partial void OnOrdMai_IdChanged();
    partial void OnOrdMai_TypeChanging(int value);
    partial void OnOrdMai_TypeChanged();
    partial void OnOrdMai_HeaderChanging(string value);
    partial void OnOrdMai_HeaderChanged();
    partial void OnOrdMai_ContentChanging(string value);
    partial void OnOrdMai_ContentChanged();
    partial void OnOrdMai_ActiveChanging(bool value);
    partial void OnOrdMai_ActiveChanged();
    #endregion
		
		public OrderMail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrdMai_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrdMai_Id
		{
			get
			{
				return this._OrdMai_Id;
			}
			set
			{
				if ((this._OrdMai_Id != value))
				{
					this.OnOrdMai_IdChanging(value);
					this.SendPropertyChanging();
					this._OrdMai_Id = value;
					this.SendPropertyChanged("OrdMai_Id");
					this.OnOrdMai_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrdMai_Type", DbType="Int NOT NULL")]
		public int OrdMai_Type
		{
			get
			{
				return this._OrdMai_Type;
			}
			set
			{
				if ((this._OrdMai_Type != value))
				{
					this.OnOrdMai_TypeChanging(value);
					this.SendPropertyChanging();
					this._OrdMai_Type = value;
					this.SendPropertyChanged("OrdMai_Type");
					this.OnOrdMai_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrdMai_Header", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string OrdMai_Header
		{
			get
			{
				return this._OrdMai_Header;
			}
			set
			{
				if ((this._OrdMai_Header != value))
				{
					this.OnOrdMai_HeaderChanging(value);
					this.SendPropertyChanging();
					this._OrdMai_Header = value;
					this.SendPropertyChanged("OrdMai_Header");
					this.OnOrdMai_HeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrdMai_Content", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string OrdMai_Content
		{
			get
			{
				return this._OrdMai_Content;
			}
			set
			{
				if ((this._OrdMai_Content != value))
				{
					this.OnOrdMai_ContentChanging(value);
					this.SendPropertyChanging();
					this._OrdMai_Content = value;
					this.SendPropertyChanged("OrdMai_Content");
					this.OnOrdMai_ContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrdMai_Active", DbType="Bit NOT NULL")]
		public bool OrdMai_Active
		{
			get
			{
				return this._OrdMai_Active;
			}
			set
			{
				if ((this._OrdMai_Active != value))
				{
					this.OnOrdMai_ActiveChanging(value);
					this.SendPropertyChanging();
					this._OrdMai_Active = value;
					this.SendPropertyChanged("OrdMai_Active");
					this.OnOrdMai_ActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Supplier")]
	public partial class Supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Sup_Id;
		
		private string _Sup_Name;
		
		private string _Sup_Description;
		
		private string _Sup_MetaTitle;
		
		private string _Sup_MetaKeyword;
		
		private string _Sup_MetaDescription;
		
		private bool _Sup_Active;
		
		private bool _Sup_Sync;
		
		private System.DateTime _Sup_Date;
		
		private int _Sag_Id;
		
		private System.Nullable<int> _Pre_Id;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSup_IdChanging(int value);
    partial void OnSup_IdChanged();
    partial void OnSup_NameChanging(string value);
    partial void OnSup_NameChanged();
    partial void OnSup_DescriptionChanging(string value);
    partial void OnSup_DescriptionChanged();
    partial void OnSup_MetaTitleChanging(string value);
    partial void OnSup_MetaTitleChanged();
    partial void OnSup_MetaKeywordChanging(string value);
    partial void OnSup_MetaKeywordChanged();
    partial void OnSup_MetaDescriptionChanging(string value);
    partial void OnSup_MetaDescriptionChanged();
    partial void OnSup_ActiveChanging(bool value);
    partial void OnSup_ActiveChanged();
    partial void OnSup_SyncChanging(bool value);
    partial void OnSup_SyncChanged();
    partial void OnSup_DateChanging(System.DateTime value);
    partial void OnSup_DateChanged();
    partial void OnSag_IdChanging(int value);
    partial void OnSag_IdChanged();
    partial void OnPre_IdChanging(System.Nullable<int> value);
    partial void OnPre_IdChanged();
    #endregion
		
		public Supplier()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sup_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Sup_Id
		{
			get
			{
				return this._Sup_Id;
			}
			set
			{
				if ((this._Sup_Id != value))
				{
					this.OnSup_IdChanging(value);
					this.SendPropertyChanging();
					this._Sup_Id = value;
					this.SendPropertyChanged("Sup_Id");
					this.OnSup_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sup_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Sup_Name
		{
			get
			{
				return this._Sup_Name;
			}
			set
			{
				if ((this._Sup_Name != value))
				{
					this.OnSup_NameChanging(value);
					this.SendPropertyChanging();
					this._Sup_Name = value;
					this.SendPropertyChanged("Sup_Name");
					this.OnSup_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sup_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Sup_Description
		{
			get
			{
				return this._Sup_Description;
			}
			set
			{
				if ((this._Sup_Description != value))
				{
					this.OnSup_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Sup_Description = value;
					this.SendPropertyChanged("Sup_Description");
					this.OnSup_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sup_MetaTitle", DbType="VarChar(128)")]
		public string Sup_MetaTitle
		{
			get
			{
				return this._Sup_MetaTitle;
			}
			set
			{
				if ((this._Sup_MetaTitle != value))
				{
					this.OnSup_MetaTitleChanging(value);
					this.SendPropertyChanging();
					this._Sup_MetaTitle = value;
					this.SendPropertyChanged("Sup_MetaTitle");
					this.OnSup_MetaTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sup_MetaKeyword", DbType="VarChar(255)")]
		public string Sup_MetaKeyword
		{
			get
			{
				return this._Sup_MetaKeyword;
			}
			set
			{
				if ((this._Sup_MetaKeyword != value))
				{
					this.OnSup_MetaKeywordChanging(value);
					this.SendPropertyChanging();
					this._Sup_MetaKeyword = value;
					this.SendPropertyChanged("Sup_MetaKeyword");
					this.OnSup_MetaKeywordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sup_MetaDescription", DbType="VarChar(255)")]
		public string Sup_MetaDescription
		{
			get
			{
				return this._Sup_MetaDescription;
			}
			set
			{
				if ((this._Sup_MetaDescription != value))
				{
					this.OnSup_MetaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Sup_MetaDescription = value;
					this.SendPropertyChanged("Sup_MetaDescription");
					this.OnSup_MetaDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sup_Active", DbType="Bit NOT NULL")]
		public bool Sup_Active
		{
			get
			{
				return this._Sup_Active;
			}
			set
			{
				if ((this._Sup_Active != value))
				{
					this.OnSup_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Sup_Active = value;
					this.SendPropertyChanged("Sup_Active");
					this.OnSup_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sup_Sync", DbType="Bit NOT NULL")]
		public bool Sup_Sync
		{
			get
			{
				return this._Sup_Sync;
			}
			set
			{
				if ((this._Sup_Sync != value))
				{
					this.OnSup_SyncChanging(value);
					this.SendPropertyChanging();
					this._Sup_Sync = value;
					this.SendPropertyChanged("Sup_Sync");
					this.OnSup_SyncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sup_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Sup_Date
		{
			get
			{
				return this._Sup_Date;
			}
			set
			{
				if ((this._Sup_Date != value))
				{
					this.OnSup_DateChanging(value);
					this.SendPropertyChanging();
					this._Sup_Date = value;
					this.SendPropertyChanged("Sup_Date");
					this.OnSup_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_Id", DbType="Int NOT NULL")]
		public int Sag_Id
		{
			get
			{
				return this._Sag_Id;
			}
			set
			{
				if ((this._Sag_Id != value))
				{
					this.OnSag_IdChanging(value);
					this.SendPropertyChanging();
					this._Sag_Id = value;
					this.SendPropertyChanged("Sag_Id");
					this.OnSag_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pre_Id", DbType="Int")]
		public System.Nullable<int> Pre_Id
		{
			get
			{
				return this._Pre_Id;
			}
			set
			{
				if ((this._Pre_Id != value))
				{
					this.OnPre_IdChanging(value);
					this.SendPropertyChanging();
					this._Pre_Id = value;
					this.SendPropertyChanged("Pre_Id");
					this.OnPre_IdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Supply")]
	public partial class Supply : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Sup_Id;
		
		private string _Sup_Name;
		
		private bool _Sup_Active;
		
		private int _Sag_Id;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSup_IdChanging(int value);
    partial void OnSup_IdChanged();
    partial void OnSup_NameChanging(string value);
    partial void OnSup_NameChanged();
    partial void OnSup_ActiveChanging(bool value);
    partial void OnSup_ActiveChanged();
    partial void OnSag_IdChanging(int value);
    partial void OnSag_IdChanged();
    #endregion
		
		public Supply()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sup_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Sup_Id
		{
			get
			{
				return this._Sup_Id;
			}
			set
			{
				if ((this._Sup_Id != value))
				{
					this.OnSup_IdChanging(value);
					this.SendPropertyChanging();
					this._Sup_Id = value;
					this.SendPropertyChanged("Sup_Id");
					this.OnSup_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sup_Name", DbType="VarChar(35) NOT NULL", CanBeNull=false)]
		public string Sup_Name
		{
			get
			{
				return this._Sup_Name;
			}
			set
			{
				if ((this._Sup_Name != value))
				{
					this.OnSup_NameChanging(value);
					this.SendPropertyChanging();
					this._Sup_Name = value;
					this.SendPropertyChanged("Sup_Name");
					this.OnSup_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sup_Active", DbType="Bit NOT NULL")]
		public bool Sup_Active
		{
			get
			{
				return this._Sup_Active;
			}
			set
			{
				if ((this._Sup_Active != value))
				{
					this.OnSup_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Sup_Active = value;
					this.SendPropertyChanged("Sup_Active");
					this.OnSup_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_Id", DbType="Int NOT NULL")]
		public int Sag_Id
		{
			get
			{
				return this._Sag_Id;
			}
			set
			{
				if ((this._Sag_Id != value))
				{
					this.OnSag_IdChanging(value);
					this.SendPropertyChanging();
					this._Sag_Id = value;
					this.SendPropertyChanged("Sag_Id");
					this.OnSag_IdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArticleImage")]
	public partial class ArticleImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ImaArt_Id;
		
		private string _ImaArt_Name;
		
		private bool _ImaArt_Default;
		
		private int _ImaArt_Position;
		
		private string _ImaArt_Image;
		
		private System.Nullable<int> _Pre_Id;
		
		private System.Nullable<int> _Art_Id;
		
		private string _ImaArt_SourceFile;
		
		private System.Nullable<System.DateTime> _ImaArt_DateAdd;
		
		private EntitySet<AttributeArticleImage> _AttributeArticleImage;
		
		private EntitySet<CompositionArticleImage> _CompositionArticleImage;
		
		private EntityRef<Article> _Article;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImaArt_IdChanging(int value);
    partial void OnImaArt_IdChanged();
    partial void OnImaArt_NameChanging(string value);
    partial void OnImaArt_NameChanged();
    partial void OnImaArt_DefaultChanging(bool value);
    partial void OnImaArt_DefaultChanged();
    partial void OnImaArt_PositionChanging(int value);
    partial void OnImaArt_PositionChanged();
    partial void OnImaArt_ImageChanging(string value);
    partial void OnImaArt_ImageChanged();
    partial void OnPre_IdChanging(System.Nullable<int> value);
    partial void OnPre_IdChanged();
    partial void OnArt_IdChanging(System.Nullable<int> value);
    partial void OnArt_IdChanged();
    partial void OnImaArt_SourceFileChanging(string value);
    partial void OnImaArt_SourceFileChanged();
    partial void OnImaArt_DateAddChanging(System.Nullable<System.DateTime> value);
    partial void OnImaArt_DateAddChanged();
    #endregion
		
		public ArticleImage()
		{
			this._AttributeArticleImage = new EntitySet<AttributeArticleImage>(new Action<AttributeArticleImage>(this.attach_AttributeArticleImage), new Action<AttributeArticleImage>(this.detach_AttributeArticleImage));
			this._CompositionArticleImage = new EntitySet<CompositionArticleImage>(new Action<CompositionArticleImage>(this.attach_CompositionArticleImage), new Action<CompositionArticleImage>(this.detach_CompositionArticleImage));
			this._Article = default(EntityRef<Article>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImaArt_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ImaArt_Id
		{
			get
			{
				return this._ImaArt_Id;
			}
			set
			{
				if ((this._ImaArt_Id != value))
				{
					this.OnImaArt_IdChanging(value);
					this.SendPropertyChanging();
					this._ImaArt_Id = value;
					this.SendPropertyChanged("ImaArt_Id");
					this.OnImaArt_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImaArt_Name", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string ImaArt_Name
		{
			get
			{
				return this._ImaArt_Name;
			}
			set
			{
				if ((this._ImaArt_Name != value))
				{
					this.OnImaArt_NameChanging(value);
					this.SendPropertyChanging();
					this._ImaArt_Name = value;
					this.SendPropertyChanged("ImaArt_Name");
					this.OnImaArt_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImaArt_Default", DbType="Bit NOT NULL")]
		public bool ImaArt_Default
		{
			get
			{
				return this._ImaArt_Default;
			}
			set
			{
				if ((this._ImaArt_Default != value))
				{
					this.OnImaArt_DefaultChanging(value);
					this.SendPropertyChanging();
					this._ImaArt_Default = value;
					this.SendPropertyChanged("ImaArt_Default");
					this.OnImaArt_DefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImaArt_Position", DbType="Int NOT NULL")]
		public int ImaArt_Position
		{
			get
			{
				return this._ImaArt_Position;
			}
			set
			{
				if ((this._ImaArt_Position != value))
				{
					this.OnImaArt_PositionChanging(value);
					this.SendPropertyChanging();
					this._ImaArt_Position = value;
					this.SendPropertyChanged("ImaArt_Position");
					this.OnImaArt_PositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImaArt_Image", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string ImaArt_Image
		{
			get
			{
				return this._ImaArt_Image;
			}
			set
			{
				if ((this._ImaArt_Image != value))
				{
					this.OnImaArt_ImageChanging(value);
					this.SendPropertyChanging();
					this._ImaArt_Image = value;
					this.SendPropertyChanged("ImaArt_Image");
					this.OnImaArt_ImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pre_Id", DbType="Int")]
		public System.Nullable<int> Pre_Id
		{
			get
			{
				return this._Pre_Id;
			}
			set
			{
				if ((this._Pre_Id != value))
				{
					this.OnPre_IdChanging(value);
					this.SendPropertyChanging();
					this._Pre_Id = value;
					this.SendPropertyChanged("Pre_Id");
					this.OnPre_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art_Id", DbType="Int")]
		public System.Nullable<int> Art_Id
		{
			get
			{
				return this._Art_Id;
			}
			set
			{
				if ((this._Art_Id != value))
				{
					if (this._Article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArt_IdChanging(value);
					this.SendPropertyChanging();
					this._Art_Id = value;
					this.SendPropertyChanged("Art_Id");
					this.OnArt_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImaArt_SourceFile", DbType="VarChar(255)")]
		public string ImaArt_SourceFile
		{
			get
			{
				return this._ImaArt_SourceFile;
			}
			set
			{
				if ((this._ImaArt_SourceFile != value))
				{
					this.OnImaArt_SourceFileChanging(value);
					this.SendPropertyChanging();
					this._ImaArt_SourceFile = value;
					this.SendPropertyChanged("ImaArt_SourceFile");
					this.OnImaArt_SourceFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImaArt_DateAdd", DbType="DateTime")]
		public System.Nullable<System.DateTime> ImaArt_DateAdd
		{
			get
			{
				return this._ImaArt_DateAdd;
			}
			set
			{
				if ((this._ImaArt_DateAdd != value))
				{
					this.OnImaArt_DateAddChanging(value);
					this.SendPropertyChanging();
					this._ImaArt_DateAdd = value;
					this.SendPropertyChanged("ImaArt_DateAdd");
					this.OnImaArt_DateAddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArticleImage_AttributeArticleImage", Storage="_AttributeArticleImage", ThisKey="ImaArt_Id", OtherKey="ImaArt_Id")]
		public EntitySet<AttributeArticleImage> AttributeArticleImage
		{
			get
			{
				return this._AttributeArticleImage;
			}
			set
			{
				this._AttributeArticleImage.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArticleImage_CompositionArticleImage", Storage="_CompositionArticleImage", ThisKey="ImaArt_Id", OtherKey="ImaArt_Id")]
		public EntitySet<CompositionArticleImage> CompositionArticleImage
		{
			get
			{
				return this._CompositionArticleImage;
			}
			set
			{
				this._CompositionArticleImage.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_ArticleImage", Storage="_Article", ThisKey="Art_Id", OtherKey="Art_Id", IsForeignKey=true)]
		public Article Article
		{
			get
			{
				return this._Article.Entity;
			}
			set
			{
				Article previousValue = this._Article.Entity;
				if (((previousValue != value) 
							|| (this._Article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Article.Entity = null;
						previousValue.ArticleImage.Remove(this);
					}
					this._Article.Entity = value;
					if ((value != null))
					{
						value.ArticleImage.Add(this);
						this._Art_Id = value.Art_Id;
					}
					else
					{
						this._Art_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Article");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AttributeArticleImage(AttributeArticleImage entity)
		{
			this.SendPropertyChanging();
			entity.ArticleImage = this;
		}
		
		private void detach_AttributeArticleImage(AttributeArticleImage entity)
		{
			this.SendPropertyChanging();
			entity.ArticleImage = null;
		}
		
		private void attach_CompositionArticleImage(CompositionArticleImage entity)
		{
			this.SendPropertyChanging();
			entity.ArticleImage = this;
		}
		
		private void detach_CompositionArticleImage(CompositionArticleImage entity)
		{
			this.SendPropertyChanging();
			entity.ArticleImage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Group]")]
	public partial class Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Grp_Pre_Id;
		
		private bool _Grp_ShowCatalog;
		
		private System.Nullable<int> _Grp_CatTarifId;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGrp_Pre_IdChanging(int value);
    partial void OnGrp_Pre_IdChanged();
    partial void OnGrp_ShowCatalogChanging(bool value);
    partial void OnGrp_ShowCatalogChanged();
    partial void OnGrp_CatTarifIdChanging(System.Nullable<int> value);
    partial void OnGrp_CatTarifIdChanged();
    #endregion
		
		public Group()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grp_Pre_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Grp_Pre_Id
		{
			get
			{
				return this._Grp_Pre_Id;
			}
			set
			{
				if ((this._Grp_Pre_Id != value))
				{
					this.OnGrp_Pre_IdChanging(value);
					this.SendPropertyChanging();
					this._Grp_Pre_Id = value;
					this.SendPropertyChanged("Grp_Pre_Id");
					this.OnGrp_Pre_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grp_ShowCatalog", DbType="Bit NOT NULL")]
		public bool Grp_ShowCatalog
		{
			get
			{
				return this._Grp_ShowCatalog;
			}
			set
			{
				if ((this._Grp_ShowCatalog != value))
				{
					this.OnGrp_ShowCatalogChanging(value);
					this.SendPropertyChanging();
					this._Grp_ShowCatalog = value;
					this.SendPropertyChanged("Grp_ShowCatalog");
					this.OnGrp_ShowCatalogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grp_CatTarifId", DbType="Int")]
		public System.Nullable<int> Grp_CatTarifId
		{
			get
			{
				return this._Grp_CatTarifId;
			}
			set
			{
				if ((this._Grp_CatTarifId != value))
				{
					this.OnGrp_CatTarifIdChanging(value);
					this.SendPropertyChanging();
					this._Grp_CatTarifId = value;
					this.SendPropertyChanged("Grp_CatTarifId");
					this.OnGrp_CatTarifIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InformationLibre")]
	public partial class InformationLibre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Sag_InfoLibre;
		
		private short _Inf_Mode;
		
		private int _Cha_Id;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSag_InfoLibreChanging(string value);
    partial void OnSag_InfoLibreChanged();
    partial void OnInf_ModeChanging(short value);
    partial void OnInf_ModeChanged();
    partial void OnCha_IdChanging(int value);
    partial void OnCha_IdChanged();
    #endregion
		
		public InformationLibre()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_InfoLibre", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Sag_InfoLibre
		{
			get
			{
				return this._Sag_InfoLibre;
			}
			set
			{
				if ((this._Sag_InfoLibre != value))
				{
					this.OnSag_InfoLibreChanging(value);
					this.SendPropertyChanging();
					this._Sag_InfoLibre = value;
					this.SendPropertyChanged("Sag_InfoLibre");
					this.OnSag_InfoLibreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inf_Mode", DbType="SmallInt NOT NULL")]
		public short Inf_Mode
		{
			get
			{
				return this._Inf_Mode;
			}
			set
			{
				if ((this._Inf_Mode != value))
				{
					this.OnInf_ModeChanging(value);
					this.SendPropertyChanging();
					this._Inf_Mode = value;
					this.SendPropertyChanged("Inf_Mode");
					this.OnInf_ModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cha_Id", DbType="Int NOT NULL")]
		public int Cha_Id
		{
			get
			{
				return this._Cha_Id;
			}
			set
			{
				if ((this._Cha_Id != value))
				{
					this.OnCha_IdChanging(value);
					this.SendPropertyChanging();
					this._Cha_Id = value;
					this.SendPropertyChanged("Cha_Id");
					this.OnCha_IdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Settlement")]
	public partial class Settlement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Set_Id;
		
		private string _Set_PaymentMethod;
		
		private string _Set_Journal;
		
		private string _Set_Intitule;
		
		private int _Sag_Id;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSet_IdChanging(int value);
    partial void OnSet_IdChanged();
    partial void OnSet_PaymentMethodChanging(string value);
    partial void OnSet_PaymentMethodChanged();
    partial void OnSet_JournalChanging(string value);
    partial void OnSet_JournalChanged();
    partial void OnSet_IntituleChanging(string value);
    partial void OnSet_IntituleChanged();
    partial void OnSag_IdChanging(int value);
    partial void OnSag_IdChanged();
    #endregion
		
		public Settlement()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Set_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Set_Id
		{
			get
			{
				return this._Set_Id;
			}
			set
			{
				if ((this._Set_Id != value))
				{
					this.OnSet_IdChanging(value);
					this.SendPropertyChanging();
					this._Set_Id = value;
					this.SendPropertyChanged("Set_Id");
					this.OnSet_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Set_PaymentMethod", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Set_PaymentMethod
		{
			get
			{
				return this._Set_PaymentMethod;
			}
			set
			{
				if ((this._Set_PaymentMethod != value))
				{
					this.OnSet_PaymentMethodChanging(value);
					this.SendPropertyChanging();
					this._Set_PaymentMethod = value;
					this.SendPropertyChanged("Set_PaymentMethod");
					this.OnSet_PaymentMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Set_Journal", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Set_Journal
		{
			get
			{
				return this._Set_Journal;
			}
			set
			{
				if ((this._Set_Journal != value))
				{
					this.OnSet_JournalChanging(value);
					this.SendPropertyChanging();
					this._Set_Journal = value;
					this.SendPropertyChanged("Set_Journal");
					this.OnSet_JournalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Set_Intitule", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Set_Intitule
		{
			get
			{
				return this._Set_Intitule;
			}
			set
			{
				if ((this._Set_Intitule != value))
				{
					this.OnSet_IntituleChanging(value);
					this.SendPropertyChanging();
					this._Set_Intitule = value;
					this.SendPropertyChanged("Set_Intitule");
					this.OnSet_IntituleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_Id", DbType="Int NOT NULL")]
		public int Sag_Id
		{
			get
			{
				return this._Sag_Id;
			}
			set
			{
				if ((this._Sag_Id != value))
				{
					this.OnSag_IdChanging(value);
					this.SendPropertyChanging();
					this._Sag_Id = value;
					this.SendPropertyChanged("Sag_Id");
					this.OnSag_IdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderPayment")]
	public partial class OrderPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Pre_Id_Order_Payment;
		
		private long _Pre_Id_Order;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPre_Id_Order_PaymentChanging(long value);
    partial void OnPre_Id_Order_PaymentChanged();
    partial void OnPre_Id_OrderChanging(long value);
    partial void OnPre_Id_OrderChanged();
    #endregion
		
		public OrderPayment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pre_Id_Order_Payment", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Pre_Id_Order_Payment
		{
			get
			{
				return this._Pre_Id_Order_Payment;
			}
			set
			{
				if ((this._Pre_Id_Order_Payment != value))
				{
					this.OnPre_Id_Order_PaymentChanging(value);
					this.SendPropertyChanging();
					this._Pre_Id_Order_Payment = value;
					this.SendPropertyChanged("Pre_Id_Order_Payment");
					this.OnPre_Id_Order_PaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pre_Id_Order", DbType="BigInt NOT NULL")]
		public long Pre_Id_Order
		{
			get
			{
				return this._Pre_Id_Order;
			}
			set
			{
				if ((this._Pre_Id_Order != value))
				{
					this.OnPre_Id_OrderChanging(value);
					this.SendPropertyChanging();
					this._Pre_Id_Order = value;
					this.SendPropertyChanged("Pre_Id_Order");
					this.OnPre_Id_OrderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StatistiqueArticle")]
	public partial class StatistiqueArticle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Sag_StatArt;
		
		private short _Inf_Mode;
		
		private int _Cha_Id;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSag_StatArtChanging(string value);
    partial void OnSag_StatArtChanged();
    partial void OnInf_ModeChanging(short value);
    partial void OnInf_ModeChanged();
    partial void OnCha_IdChanging(int value);
    partial void OnCha_IdChanged();
    #endregion
		
		public StatistiqueArticle()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_StatArt", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Sag_StatArt
		{
			get
			{
				return this._Sag_StatArt;
			}
			set
			{
				if ((this._Sag_StatArt != value))
				{
					this.OnSag_StatArtChanging(value);
					this.SendPropertyChanging();
					this._Sag_StatArt = value;
					this.SendPropertyChanged("Sag_StatArt");
					this.OnSag_StatArtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inf_Mode", DbType="SmallInt NOT NULL")]
		public short Inf_Mode
		{
			get
			{
				return this._Inf_Mode;
			}
			set
			{
				if ((this._Inf_Mode != value))
				{
					this.OnInf_ModeChanging(value);
					this.SendPropertyChanging();
					this._Inf_Mode = value;
					this.SendPropertyChanged("Inf_Mode");
					this.OnInf_ModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cha_Id", DbType="Int NOT NULL")]
		public int Cha_Id
		{
			get
			{
				return this._Cha_Id;
			}
			set
			{
				if ((this._Cha_Id != value))
				{
					this.OnCha_IdChanging(value);
					this.SendPropertyChanging();
					this._Cha_Id = value;
					this.SendPropertyChanged("Cha_Id");
					this.OnCha_IdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Replacement")]
	public partial class Replacement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OriginText;
		
		private string _ReplacementText;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOriginTextChanging(string value);
    partial void OnOriginTextChanged();
    partial void OnReplacementTextChanging(string value);
    partial void OnReplacementTextChanged();
    #endregion
		
		public Replacement()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginText", DbType="VarChar(500) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OriginText
		{
			get
			{
				return this._OriginText;
			}
			set
			{
				if ((this._OriginText != value))
				{
					this.OnOriginTextChanging(value);
					this.SendPropertyChanging();
					this._OriginText = value;
					this.SendPropertyChanged("OriginText");
					this.OnOriginTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplacementText", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string ReplacementText
		{
			get
			{
				return this._ReplacementText;
			}
			set
			{
				if ((this._ReplacementText != value))
				{
					this.OnReplacementTextChanging(value);
					this.SendPropertyChanging();
					this._ReplacementText = value;
					this.SendPropertyChanged("ReplacementText");
					this.OnReplacementTextChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InformationLibreClient")]
	public partial class InformationLibreClient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Sag_InfoLibreClient;
		
		private short _Inf_Mode;
		
		private int _Cha_Id;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSag_InfoLibreClientChanging(string value);
    partial void OnSag_InfoLibreClientChanged();
    partial void OnInf_ModeChanging(short value);
    partial void OnInf_ModeChanged();
    partial void OnCha_IdChanging(int value);
    partial void OnCha_IdChanged();
    #endregion
		
		public InformationLibreClient()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_InfoLibreClient", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Sag_InfoLibreClient
		{
			get
			{
				return this._Sag_InfoLibreClient;
			}
			set
			{
				if ((this._Sag_InfoLibreClient != value))
				{
					this.OnSag_InfoLibreClientChanging(value);
					this.SendPropertyChanging();
					this._Sag_InfoLibreClient = value;
					this.SendPropertyChanged("Sag_InfoLibreClient");
					this.OnSag_InfoLibreClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inf_Mode", DbType="SmallInt NOT NULL")]
		public short Inf_Mode
		{
			get
			{
				return this._Inf_Mode;
			}
			set
			{
				if ((this._Inf_Mode != value))
				{
					this.OnInf_ModeChanging(value);
					this.SendPropertyChanging();
					this._Inf_Mode = value;
					this.SendPropertyChanged("Inf_Mode");
					this.OnInf_ModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cha_Id", DbType="Int NOT NULL")]
		public int Cha_Id
		{
			get
			{
				return this._Cha_Id;
			}
			set
			{
				if ((this._Cha_Id != value))
				{
					this.OnCha_IdChanging(value);
					this.SendPropertyChanging();
					this._Cha_Id = value;
					this.SendPropertyChanged("Cha_Id");
					this.OnCha_IdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StatistiqueClient")]
	public partial class StatistiqueClient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Sag_StatClient;
		
		private short _Inf_Mode;
		
		private int _Cha_Id;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSag_StatClientChanging(string value);
    partial void OnSag_StatClientChanged();
    partial void OnInf_ModeChanging(short value);
    partial void OnInf_ModeChanged();
    partial void OnCha_IdChanging(int value);
    partial void OnCha_IdChanged();
    #endregion
		
		public StatistiqueClient()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_StatClient", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Sag_StatClient
		{
			get
			{
				return this._Sag_StatClient;
			}
			set
			{
				if ((this._Sag_StatClient != value))
				{
					this.OnSag_StatClientChanging(value);
					this.SendPropertyChanging();
					this._Sag_StatClient = value;
					this.SendPropertyChanged("Sag_StatClient");
					this.OnSag_StatClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inf_Mode", DbType="SmallInt NOT NULL")]
		public short Inf_Mode
		{
			get
			{
				return this._Inf_Mode;
			}
			set
			{
				if ((this._Inf_Mode != value))
				{
					this.OnInf_ModeChanging(value);
					this.SendPropertyChanging();
					this._Inf_Mode = value;
					this.SendPropertyChanged("Inf_Mode");
					this.OnInf_ModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cha_Id", DbType="Int NOT NULL")]
		public int Cha_Id
		{
			get
			{
				return this._Cha_Id;
			}
			set
			{
				if ((this._Cha_Id != value))
				{
					this.OnCha_IdChanging(value);
					this.SendPropertyChanging();
					this._Cha_Id = value;
					this.SendPropertyChanged("Cha_Id");
					this.OnCha_IdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InformationArticle")]
	public partial class InformationArticle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Sag_InfoArt;
		
		private short _Inf_SendValue;
		
		private short _Inf_Mode;
		
		private int _Cha_Id;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSag_InfoArtChanging(int value);
    partial void OnSag_InfoArtChanged();
    partial void OnInf_SendValueChanging(short value);
    partial void OnInf_SendValueChanged();
    partial void OnInf_ModeChanging(short value);
    partial void OnInf_ModeChanged();
    partial void OnCha_IdChanging(int value);
    partial void OnCha_IdChanged();
    #endregion
		
		public InformationArticle()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_InfoArt", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Sag_InfoArt
		{
			get
			{
				return this._Sag_InfoArt;
			}
			set
			{
				if ((this._Sag_InfoArt != value))
				{
					this.OnSag_InfoArtChanging(value);
					this.SendPropertyChanging();
					this._Sag_InfoArt = value;
					this.SendPropertyChanged("Sag_InfoArt");
					this.OnSag_InfoArtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inf_SendValue", DbType="SmallInt NOT NULL")]
		public short Inf_SendValue
		{
			get
			{
				return this._Inf_SendValue;
			}
			set
			{
				if ((this._Inf_SendValue != value))
				{
					this.OnInf_SendValueChanging(value);
					this.SendPropertyChanging();
					this._Inf_SendValue = value;
					this.SendPropertyChanged("Inf_SendValue");
					this.OnInf_SendValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inf_Mode", DbType="SmallInt NOT NULL")]
		public short Inf_Mode
		{
			get
			{
				return this._Inf_Mode;
			}
			set
			{
				if ((this._Inf_Mode != value))
				{
					this.OnInf_ModeChanging(value);
					this.SendPropertyChanging();
					this._Inf_Mode = value;
					this.SendPropertyChanged("Inf_Mode");
					this.OnInf_ModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cha_Id", DbType="Int NOT NULL")]
		public int Cha_Id
		{
			get
			{
				return this._Cha_Id;
			}
			set
			{
				if ((this._Cha_Id != value))
				{
					this.OnCha_IdChanging(value);
					this.SendPropertyChanging();
					this._Cha_Id = value;
					this.SendPropertyChanged("Cha_Id");
					this.OnCha_IdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MediaAssignmentRule")]
	public partial class MediaAssignmentRule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SuffixText;
		
		private string _AssignName;
		
		private short _Rule;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSuffixTextChanging(string value);
    partial void OnSuffixTextChanged();
    partial void OnAssignNameChanging(string value);
    partial void OnAssignNameChanged();
    partial void OnRuleChanging(short value);
    partial void OnRuleChanged();
    #endregion
		
		public MediaAssignmentRule()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuffixText", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SuffixText
		{
			get
			{
				return this._SuffixText;
			}
			set
			{
				if ((this._SuffixText != value))
				{
					this.OnSuffixTextChanging(value);
					this.SendPropertyChanging();
					this._SuffixText = value;
					this.SendPropertyChanged("SuffixText");
					this.OnSuffixTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignName", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string AssignName
		{
			get
			{
				return this._AssignName;
			}
			set
			{
				if ((this._AssignName != value))
				{
					this.OnAssignNameChanging(value);
					this.SendPropertyChanging();
					this._AssignName = value;
					this.SendPropertyChanged("AssignName");
					this.OnAssignNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Rule]", Storage="_Rule", DbType="SmallInt NOT NULL")]
		public short Rule
		{
			get
			{
				return this._Rule;
			}
			set
			{
				if ((this._Rule != value))
				{
					this.OnRuleChanging(value);
					this.SendPropertyChanging();
					this._Rule = value;
					this.SendPropertyChanged("Rule");
					this.OnRuleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Attribute")]
	public partial class Attribute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Sag_Id;
		
		private int _Pre_Id;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSag_IdChanging(int value);
    partial void OnSag_IdChanged();
    partial void OnPre_IdChanging(int value);
    partial void OnPre_IdChanged();
    #endregion
		
		public Attribute()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Sag_Id
		{
			get
			{
				return this._Sag_Id;
			}
			set
			{
				if ((this._Sag_Id != value))
				{
					this.OnSag_IdChanging(value);
					this.SendPropertyChanging();
					this._Sag_Id = value;
					this.SendPropertyChanged("Sag_Id");
					this.OnSag_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pre_Id", DbType="Int NOT NULL")]
		public int Pre_Id
		{
			get
			{
				return this._Pre_Id;
			}
			set
			{
				if ((this._Pre_Id != value))
				{
					this.OnPre_IdChanging(value);
					this.SendPropertyChanging();
					this._Pre_Id = value;
					this.SendPropertyChanged("Pre_Id");
					this.OnPre_IdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AttributeGroup")]
	public partial class AttributeGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Sag_Id;
		
		private int _Pre_Id;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSag_IdChanging(int value);
    partial void OnSag_IdChanged();
    partial void OnPre_IdChanging(int value);
    partial void OnPre_IdChanged();
    #endregion
		
		public AttributeGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Sag_Id
		{
			get
			{
				return this._Sag_Id;
			}
			set
			{
				if ((this._Sag_Id != value))
				{
					this.OnSag_IdChanging(value);
					this.SendPropertyChanging();
					this._Sag_Id = value;
					this.SendPropertyChanged("Sag_Id");
					this.OnSag_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pre_Id", DbType="Int NOT NULL")]
		public int Pre_Id
		{
			get
			{
				return this._Pre_Id;
			}
			set
			{
				if ((this._Pre_Id != value))
				{
					this.OnPre_IdChanging(value);
					this.SendPropertyChanging();
					this._Pre_Id = value;
					this.SendPropertyChanged("Pre_Id");
					this.OnPre_IdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConditioningGroup")]
	public partial class ConditioningGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Sag_Id;
		
		private int _Pre_Id;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSag_IdChanging(int value);
    partial void OnSag_IdChanged();
    partial void OnPre_IdChanging(int value);
    partial void OnPre_IdChanged();
    #endregion
		
		public ConditioningGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Sag_Id
		{
			get
			{
				return this._Sag_Id;
			}
			set
			{
				if ((this._Sag_Id != value))
				{
					this.OnSag_IdChanging(value);
					this.SendPropertyChanging();
					this._Sag_Id = value;
					this.SendPropertyChanged("Sag_Id");
					this.OnSag_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pre_Id", DbType="Int NOT NULL")]
		public int Pre_Id
		{
			get
			{
				return this._Pre_Id;
			}
			set
			{
				if ((this._Pre_Id != value))
				{
					this.OnPre_IdChanging(value);
					this.SendPropertyChanging();
					this._Pre_Id = value;
					this.SendPropertyChanged("Pre_Id");
					this.OnPre_IdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConditioningArticle")]
	public partial class ConditioningArticle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ConArt_Id;
		
		private bool _ConArt_Default;
		
		private bool _ConArt_Sync;
		
		private int _Con_Id;
		
		private int _Art_Id;
		
		private int _Sag_Id;
		
		private System.Nullable<int> _Pre_Id;
		
		private EntityRef<Article> _Article;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConArt_IdChanging(int value);
    partial void OnConArt_IdChanged();
    partial void OnConArt_DefaultChanging(bool value);
    partial void OnConArt_DefaultChanged();
    partial void OnConArt_SyncChanging(bool value);
    partial void OnConArt_SyncChanged();
    partial void OnCon_IdChanging(int value);
    partial void OnCon_IdChanged();
    partial void OnArt_IdChanging(int value);
    partial void OnArt_IdChanged();
    partial void OnSag_IdChanging(int value);
    partial void OnSag_IdChanged();
    partial void OnPre_IdChanging(System.Nullable<int> value);
    partial void OnPre_IdChanged();
    #endregion
		
		public ConditioningArticle()
		{
			this._Article = default(EntityRef<Article>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConArt_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ConArt_Id
		{
			get
			{
				return this._ConArt_Id;
			}
			set
			{
				if ((this._ConArt_Id != value))
				{
					this.OnConArt_IdChanging(value);
					this.SendPropertyChanging();
					this._ConArt_Id = value;
					this.SendPropertyChanged("ConArt_Id");
					this.OnConArt_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConArt_Default", DbType="Bit NOT NULL")]
		public bool ConArt_Default
		{
			get
			{
				return this._ConArt_Default;
			}
			set
			{
				if ((this._ConArt_Default != value))
				{
					this.OnConArt_DefaultChanging(value);
					this.SendPropertyChanging();
					this._ConArt_Default = value;
					this.SendPropertyChanged("ConArt_Default");
					this.OnConArt_DefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConArt_Sync", DbType="Bit NOT NULL")]
		public bool ConArt_Sync
		{
			get
			{
				return this._ConArt_Sync;
			}
			set
			{
				if ((this._ConArt_Sync != value))
				{
					this.OnConArt_SyncChanging(value);
					this.SendPropertyChanging();
					this._ConArt_Sync = value;
					this.SendPropertyChanged("ConArt_Sync");
					this.OnConArt_SyncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Con_Id", DbType="Int NOT NULL")]
		public int Con_Id
		{
			get
			{
				return this._Con_Id;
			}
			set
			{
				if ((this._Con_Id != value))
				{
					this.OnCon_IdChanging(value);
					this.SendPropertyChanging();
					this._Con_Id = value;
					this.SendPropertyChanged("Con_Id");
					this.OnCon_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art_Id", DbType="Int NOT NULL")]
		public int Art_Id
		{
			get
			{
				return this._Art_Id;
			}
			set
			{
				if ((this._Art_Id != value))
				{
					if (this._Article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArt_IdChanging(value);
					this.SendPropertyChanging();
					this._Art_Id = value;
					this.SendPropertyChanged("Art_Id");
					this.OnArt_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_Id", DbType="Int NOT NULL")]
		public int Sag_Id
		{
			get
			{
				return this._Sag_Id;
			}
			set
			{
				if ((this._Sag_Id != value))
				{
					this.OnSag_IdChanging(value);
					this.SendPropertyChanging();
					this._Sag_Id = value;
					this.SendPropertyChanged("Sag_Id");
					this.OnSag_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pre_Id", DbType="Int")]
		public System.Nullable<int> Pre_Id
		{
			get
			{
				return this._Pre_Id;
			}
			set
			{
				if ((this._Pre_Id != value))
				{
					this.OnPre_IdChanging(value);
					this.SendPropertyChanging();
					this._Pre_Id = value;
					this.SendPropertyChanged("Pre_Id");
					this.OnPre_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_ConditioningArticle", Storage="_Article", ThisKey="Art_Id", OtherKey="Art_Id", IsForeignKey=true)]
		public Article Article
		{
			get
			{
				return this._Article.Entity;
			}
			set
			{
				Article previousValue = this._Article.Entity;
				if (((previousValue != value) 
							|| (this._Article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Article.Entity = null;
						previousValue.ConditioningArticle.Remove(this);
					}
					this._Article.Entity = value;
					if ((value != null))
					{
						value.ConditioningArticle.Add(this);
						this._Art_Id = value.Art_Id;
					}
					else
					{
						this._Art_Id = default(int);
					}
					this.SendPropertyChanged("Article");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Conditioning")]
	public partial class Conditioning : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Sag_Id;
		
		private int _Pre_Id;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSag_IdChanging(int value);
    partial void OnSag_IdChanged();
    partial void OnPre_IdChanging(int value);
    partial void OnPre_IdChanged();
    #endregion
		
		public Conditioning()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Sag_Id
		{
			get
			{
				return this._Sag_Id;
			}
			set
			{
				if ((this._Sag_Id != value))
				{
					this.OnSag_IdChanging(value);
					this.SendPropertyChanging();
					this._Sag_Id = value;
					this.SendPropertyChanged("Sag_Id");
					this.OnSag_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pre_Id", DbType="Int NOT NULL")]
		public int Pre_Id
		{
			get
			{
				return this._Pre_Id;
			}
			set
			{
				if ((this._Pre_Id != value))
				{
					this.OnPre_IdChanging(value);
					this.SendPropertyChanging();
					this._Pre_Id = value;
					this.SendPropertyChanged("Pre_Id");
					this.OnPre_IdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InformationLibreArticle")]
	public partial class InformationLibreArticle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Sag_InfoLibreArticle;
		
		private int _Inf_Catalogue;
		
		private string _Inf_Parent;
		
		private bool _Inf_IsStat;
		
		private System.Nullable<int> _Inf_Stat;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSag_InfoLibreArticleChanging(string value);
    partial void OnSag_InfoLibreArticleChanged();
    partial void OnInf_CatalogueChanging(int value);
    partial void OnInf_CatalogueChanged();
    partial void OnInf_ParentChanging(string value);
    partial void OnInf_ParentChanged();
    partial void OnInf_IsStatChanging(bool value);
    partial void OnInf_IsStatChanged();
    partial void OnInf_StatChanging(System.Nullable<int> value);
    partial void OnInf_StatChanged();
    #endregion
		
		public InformationLibreArticle()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_InfoLibreArticle", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Sag_InfoLibreArticle
		{
			get
			{
				return this._Sag_InfoLibreArticle;
			}
			set
			{
				if ((this._Sag_InfoLibreArticle != value))
				{
					this.OnSag_InfoLibreArticleChanging(value);
					this.SendPropertyChanging();
					this._Sag_InfoLibreArticle = value;
					this.SendPropertyChanged("Sag_InfoLibreArticle");
					this.OnSag_InfoLibreArticleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inf_Catalogue", DbType="Int NOT NULL")]
		public int Inf_Catalogue
		{
			get
			{
				return this._Inf_Catalogue;
			}
			set
			{
				if ((this._Inf_Catalogue != value))
				{
					this.OnInf_CatalogueChanging(value);
					this.SendPropertyChanging();
					this._Inf_Catalogue = value;
					this.SendPropertyChanged("Inf_Catalogue");
					this.OnInf_CatalogueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inf_Parent", DbType="VarChar(128)")]
		public string Inf_Parent
		{
			get
			{
				return this._Inf_Parent;
			}
			set
			{
				if ((this._Inf_Parent != value))
				{
					this.OnInf_ParentChanging(value);
					this.SendPropertyChanging();
					this._Inf_Parent = value;
					this.SendPropertyChanged("Inf_Parent");
					this.OnInf_ParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inf_IsStat", DbType="Bit NOT NULL")]
		public bool Inf_IsStat
		{
			get
			{
				return this._Inf_IsStat;
			}
			set
			{
				if ((this._Inf_IsStat != value))
				{
					this.OnInf_IsStatChanging(value);
					this.SendPropertyChanging();
					this._Inf_IsStat = value;
					this.SendPropertyChanged("Inf_IsStat");
					this.OnInf_IsStatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inf_Stat", DbType="Int")]
		public System.Nullable<int> Inf_Stat
		{
			get
			{
				return this._Inf_Stat;
			}
			set
			{
				if ((this._Inf_Stat != value))
				{
					this.OnInf_StatChanging(value);
					this.SendPropertyChanging();
					this._Inf_Stat = value;
					this.SendPropertyChanged("Inf_Stat");
					this.OnInf_StatChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Country")]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Pre_IdCountry;
		
		private int _Sag_CatCompta;
		
		private int _Sag_CatComptaPro;
		
		private bool _Replace_ISOCode;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPre_IdCountryChanging(int value);
    partial void OnPre_IdCountryChanged();
    partial void OnSag_CatComptaChanging(int value);
    partial void OnSag_CatComptaChanged();
    partial void OnSag_CatComptaProChanging(int value);
    partial void OnSag_CatComptaProChanged();
    partial void OnReplace_ISOCodeChanging(bool value);
    partial void OnReplace_ISOCodeChanged();
    #endregion
		
		public Country()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pre_IdCountry", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Pre_IdCountry
		{
			get
			{
				return this._Pre_IdCountry;
			}
			set
			{
				if ((this._Pre_IdCountry != value))
				{
					this.OnPre_IdCountryChanging(value);
					this.SendPropertyChanging();
					this._Pre_IdCountry = value;
					this.SendPropertyChanged("Pre_IdCountry");
					this.OnPre_IdCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_CatCompta", DbType="Int NOT NULL")]
		public int Sag_CatCompta
		{
			get
			{
				return this._Sag_CatCompta;
			}
			set
			{
				if ((this._Sag_CatCompta != value))
				{
					this.OnSag_CatComptaChanging(value);
					this.SendPropertyChanging();
					this._Sag_CatCompta = value;
					this.SendPropertyChanged("Sag_CatCompta");
					this.OnSag_CatComptaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_CatComptaPro", DbType="Int NOT NULL")]
		public int Sag_CatComptaPro
		{
			get
			{
				return this._Sag_CatComptaPro;
			}
			set
			{
				if ((this._Sag_CatComptaPro != value))
				{
					this.OnSag_CatComptaProChanging(value);
					this.SendPropertyChanging();
					this._Sag_CatComptaPro = value;
					this.SendPropertyChanged("Sag_CatComptaPro");
					this.OnSag_CatComptaProChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Replace_ISOCode", DbType="Bit NOT NULL")]
		public bool Replace_ISOCode
		{
			get
			{
				return this._Replace_ISOCode;
			}
			set
			{
				if ((this._Replace_ISOCode != value))
				{
					this.OnReplace_ISOCodeChanging(value);
					this.SendPropertyChanging();
					this._Replace_ISOCode = value;
					this.SendPropertyChanged("Replace_ISOCode");
					this.OnReplace_ISOCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Attachment")]
	public partial class Attachment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Att_Id;
		
		private string _Att_File;
		
		private string _Att_FileName;
		
		private string _Att_Mime;
		
		private string _Att_Name;
		
		private string _Att_Description;
		
		private int _Art_Id;
		
		private System.Nullable<int> _Pre_Id;
		
		private System.Nullable<int> _Sag_Id;
		
		private EntityRef<Article> _Article;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAtt_IdChanging(int value);
    partial void OnAtt_IdChanged();
    partial void OnAtt_FileChanging(string value);
    partial void OnAtt_FileChanged();
    partial void OnAtt_FileNameChanging(string value);
    partial void OnAtt_FileNameChanged();
    partial void OnAtt_MimeChanging(string value);
    partial void OnAtt_MimeChanged();
    partial void OnAtt_NameChanging(string value);
    partial void OnAtt_NameChanged();
    partial void OnAtt_DescriptionChanging(string value);
    partial void OnAtt_DescriptionChanged();
    partial void OnArt_IdChanging(int value);
    partial void OnArt_IdChanged();
    partial void OnPre_IdChanging(System.Nullable<int> value);
    partial void OnPre_IdChanged();
    partial void OnSag_IdChanging(System.Nullable<int> value);
    partial void OnSag_IdChanged();
    #endregion
		
		public Attachment()
		{
			this._Article = default(EntityRef<Article>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Att_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Att_Id
		{
			get
			{
				return this._Att_Id;
			}
			set
			{
				if ((this._Att_Id != value))
				{
					this.OnAtt_IdChanging(value);
					this.SendPropertyChanging();
					this._Att_Id = value;
					this.SendPropertyChanged("Att_Id");
					this.OnAtt_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Att_File", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Att_File
		{
			get
			{
				return this._Att_File;
			}
			set
			{
				if ((this._Att_File != value))
				{
					this.OnAtt_FileChanging(value);
					this.SendPropertyChanging();
					this._Att_File = value;
					this.SendPropertyChanged("Att_File");
					this.OnAtt_FileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Att_FileName", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string Att_FileName
		{
			get
			{
				return this._Att_FileName;
			}
			set
			{
				if ((this._Att_FileName != value))
				{
					this.OnAtt_FileNameChanging(value);
					this.SendPropertyChanging();
					this._Att_FileName = value;
					this.SendPropertyChanged("Att_FileName");
					this.OnAtt_FileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Att_Mime", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string Att_Mime
		{
			get
			{
				return this._Att_Mime;
			}
			set
			{
				if ((this._Att_Mime != value))
				{
					this.OnAtt_MimeChanging(value);
					this.SendPropertyChanging();
					this._Att_Mime = value;
					this.SendPropertyChanged("Att_Mime");
					this.OnAtt_MimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Att_Name", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string Att_Name
		{
			get
			{
				return this._Att_Name;
			}
			set
			{
				if ((this._Att_Name != value))
				{
					this.OnAtt_NameChanging(value);
					this.SendPropertyChanging();
					this._Att_Name = value;
					this.SendPropertyChanged("Att_Name");
					this.OnAtt_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Att_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Att_Description
		{
			get
			{
				return this._Att_Description;
			}
			set
			{
				if ((this._Att_Description != value))
				{
					this.OnAtt_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Att_Description = value;
					this.SendPropertyChanged("Att_Description");
					this.OnAtt_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art_Id", DbType="Int NOT NULL")]
		public int Art_Id
		{
			get
			{
				return this._Art_Id;
			}
			set
			{
				if ((this._Art_Id != value))
				{
					if (this._Article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArt_IdChanging(value);
					this.SendPropertyChanging();
					this._Art_Id = value;
					this.SendPropertyChanged("Art_Id");
					this.OnArt_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pre_Id", DbType="Int")]
		public System.Nullable<int> Pre_Id
		{
			get
			{
				return this._Pre_Id;
			}
			set
			{
				if ((this._Pre_Id != value))
				{
					this.OnPre_IdChanging(value);
					this.SendPropertyChanging();
					this._Pre_Id = value;
					this.SendPropertyChanged("Pre_Id");
					this.OnPre_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_Id", DbType="Int")]
		public System.Nullable<int> Sag_Id
		{
			get
			{
				return this._Sag_Id;
			}
			set
			{
				if ((this._Sag_Id != value))
				{
					this.OnSag_IdChanging(value);
					this.SendPropertyChanging();
					this._Sag_Id = value;
					this.SendPropertyChanged("Sag_Id");
					this.OnSag_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_Attachment", Storage="_Article", ThisKey="Art_Id", OtherKey="Art_Id", IsForeignKey=true)]
		public Article Article
		{
			get
			{
				return this._Article.Entity;
			}
			set
			{
				Article previousValue = this._Article.Entity;
				if (((previousValue != value) 
							|| (this._Article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Article.Entity = null;
						previousValue.Attachment.Remove(this);
					}
					this._Article.Entity = value;
					if ((value != null))
					{
						value.Attachment.Add(this);
						this._Art_Id = value.Art_Id;
					}
					else
					{
						this._Art_Id = default(int);
					}
					this.SendPropertyChanged("Article");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Group_CRisque")]
	public partial class Group_CRisque : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Sag_CRisque;
		
		private int _Grp_Pre_Id;
		
		private int _Grp_PreId_Default;
		
		private bool _Grp_LockCondition;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSag_CRisqueChanging(int value);
    partial void OnSag_CRisqueChanged();
    partial void OnGrp_Pre_IdChanging(int value);
    partial void OnGrp_Pre_IdChanged();
    partial void OnGrp_PreId_DefaultChanging(int value);
    partial void OnGrp_PreId_DefaultChanged();
    partial void OnGrp_LockConditionChanging(bool value);
    partial void OnGrp_LockConditionChanged();
    #endregion
		
		public Group_CRisque()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_CRisque", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Sag_CRisque
		{
			get
			{
				return this._Sag_CRisque;
			}
			set
			{
				if ((this._Sag_CRisque != value))
				{
					this.OnSag_CRisqueChanging(value);
					this.SendPropertyChanging();
					this._Sag_CRisque = value;
					this.SendPropertyChanged("Sag_CRisque");
					this.OnSag_CRisqueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grp_Pre_Id", DbType="Int NOT NULL")]
		public int Grp_Pre_Id
		{
			get
			{
				return this._Grp_Pre_Id;
			}
			set
			{
				if ((this._Grp_Pre_Id != value))
				{
					this.OnGrp_Pre_IdChanging(value);
					this.SendPropertyChanging();
					this._Grp_Pre_Id = value;
					this.SendPropertyChanged("Grp_Pre_Id");
					this.OnGrp_Pre_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grp_PreId_Default", DbType="Int NOT NULL")]
		public int Grp_PreId_Default
		{
			get
			{
				return this._Grp_PreId_Default;
			}
			set
			{
				if ((this._Grp_PreId_Default != value))
				{
					this.OnGrp_PreId_DefaultChanging(value);
					this.SendPropertyChanging();
					this._Grp_PreId_Default = value;
					this.SendPropertyChanged("Grp_PreId_Default");
					this.OnGrp_PreId_DefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grp_LockCondition", DbType="Bit NOT NULL")]
		public bool Grp_LockCondition
		{
			get
			{
				return this._Grp_LockCondition;
			}
			set
			{
				if ((this._Grp_LockCondition != value))
				{
					this.OnGrp_LockConditionChanging(value);
					this.SendPropertyChanging();
					this._Grp_LockCondition = value;
					this.SendPropertyChanged("Grp_LockCondition");
					this.OnGrp_LockConditionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee_Collaborateur")]
	public partial class Employee_Collaborateur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Sage_CO_No;
		
		private int _IdEmployee;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSage_CO_NoChanging(int value);
    partial void OnSage_CO_NoChanged();
    partial void OnIdEmployeeChanging(int value);
    partial void OnIdEmployeeChanged();
    #endregion
		
		public Employee_Collaborateur()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sage_CO_No", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Sage_CO_No
		{
			get
			{
				return this._Sage_CO_No;
			}
			set
			{
				if ((this._Sage_CO_No != value))
				{
					this.OnSage_CO_NoChanging(value);
					this.SendPropertyChanging();
					this._Sage_CO_No = value;
					this.SendPropertyChanged("Sage_CO_No");
					this.OnSage_CO_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEmployee", DbType="Int NOT NULL")]
		public int IdEmployee
		{
			get
			{
				return this._IdEmployee;
			}
			set
			{
				if ((this._IdEmployee != value))
				{
					this.OnIdEmployeeChanging(value);
					this.SendPropertyChanging();
					this._IdEmployee = value;
					this.SendPropertyChanged("IdEmployee");
					this.OnIdEmployeeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompositionArticleAttribute")]
	public partial class CompositionArticleAttribute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Caa_ComArtId;
		
		private int _Caa_AttributeGroup_PreId;
		
		private int _Caa_Attribute_PreId;
		
		private EntityRef<CompositionArticle> _CompositionArticle;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCaa_ComArtIdChanging(int value);
    partial void OnCaa_ComArtIdChanged();
    partial void OnCaa_AttributeGroup_PreIdChanging(int value);
    partial void OnCaa_AttributeGroup_PreIdChanged();
    partial void OnCaa_Attribute_PreIdChanging(int value);
    partial void OnCaa_Attribute_PreIdChanged();
    #endregion
		
		public CompositionArticleAttribute()
		{
			this._CompositionArticle = default(EntityRef<CompositionArticle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caa_ComArtId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Caa_ComArtId
		{
			get
			{
				return this._Caa_ComArtId;
			}
			set
			{
				if ((this._Caa_ComArtId != value))
				{
					if (this._CompositionArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCaa_ComArtIdChanging(value);
					this.SendPropertyChanging();
					this._Caa_ComArtId = value;
					this.SendPropertyChanged("Caa_ComArtId");
					this.OnCaa_ComArtIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caa_AttributeGroup_PreId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Caa_AttributeGroup_PreId
		{
			get
			{
				return this._Caa_AttributeGroup_PreId;
			}
			set
			{
				if ((this._Caa_AttributeGroup_PreId != value))
				{
					this.OnCaa_AttributeGroup_PreIdChanging(value);
					this.SendPropertyChanging();
					this._Caa_AttributeGroup_PreId = value;
					this.SendPropertyChanged("Caa_AttributeGroup_PreId");
					this.OnCaa_AttributeGroup_PreIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caa_Attribute_PreId", DbType="Int NOT NULL")]
		public int Caa_Attribute_PreId
		{
			get
			{
				return this._Caa_Attribute_PreId;
			}
			set
			{
				if ((this._Caa_Attribute_PreId != value))
				{
					this.OnCaa_Attribute_PreIdChanging(value);
					this.SendPropertyChanging();
					this._Caa_Attribute_PreId = value;
					this.SendPropertyChanged("Caa_Attribute_PreId");
					this.OnCaa_Attribute_PreIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompositionArticle_CompositionArticleAttribute", Storage="_CompositionArticle", ThisKey="Caa_ComArtId", OtherKey="ComArt_Id", IsForeignKey=true)]
		public CompositionArticle CompositionArticle
		{
			get
			{
				return this._CompositionArticle.Entity;
			}
			set
			{
				CompositionArticle previousValue = this._CompositionArticle.Entity;
				if (((previousValue != value) 
							|| (this._CompositionArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompositionArticle.Entity = null;
						previousValue.CompositionArticleAttribute.Remove(this);
					}
					this._CompositionArticle.Entity = value;
					if ((value != null))
					{
						value.CompositionArticleAttribute.Add(this);
						this._Caa_ComArtId = value.ComArt_Id;
					}
					else
					{
						this._Caa_ComArtId = default(int);
					}
					this.SendPropertyChanged("CompositionArticle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompositionArticleAttributeGroup")]
	public partial class CompositionArticleAttributeGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Cag_ArtId;
		
		private int _Cag_AttributeGroup_PreId;
		
		private EntityRef<Article> _Article;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCag_ArtIdChanging(int value);
    partial void OnCag_ArtIdChanged();
    partial void OnCag_AttributeGroup_PreIdChanging(int value);
    partial void OnCag_AttributeGroup_PreIdChanged();
    #endregion
		
		public CompositionArticleAttributeGroup()
		{
			this._Article = default(EntityRef<Article>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cag_ArtId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Cag_ArtId
		{
			get
			{
				return this._Cag_ArtId;
			}
			set
			{
				if ((this._Cag_ArtId != value))
				{
					if (this._Article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCag_ArtIdChanging(value);
					this.SendPropertyChanging();
					this._Cag_ArtId = value;
					this.SendPropertyChanged("Cag_ArtId");
					this.OnCag_ArtIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cag_AttributeGroup_PreId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Cag_AttributeGroup_PreId
		{
			get
			{
				return this._Cag_AttributeGroup_PreId;
			}
			set
			{
				if ((this._Cag_AttributeGroup_PreId != value))
				{
					this.OnCag_AttributeGroup_PreIdChanging(value);
					this.SendPropertyChanging();
					this._Cag_AttributeGroup_PreId = value;
					this.SendPropertyChanged("Cag_AttributeGroup_PreId");
					this.OnCag_AttributeGroup_PreIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_CompositionArticleAttributeGroup", Storage="_Article", ThisKey="Cag_ArtId", OtherKey="Art_Id", IsForeignKey=true)]
		public Article Article
		{
			get
			{
				return this._Article.Entity;
			}
			set
			{
				Article previousValue = this._Article.Entity;
				if (((previousValue != value) 
							|| (this._Article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Article.Entity = null;
						previousValue.CompositionArticleAttributeGroup.Remove(this);
					}
					this._Article.Entity = value;
					if ((value != null))
					{
						value.CompositionArticleAttributeGroup.Add(this);
						this._Cag_ArtId = value.Art_Id;
					}
					else
					{
						this._Cag_ArtId = default(int);
					}
					this.SendPropertyChanged("Article");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompositionArticle")]
	public partial class CompositionArticle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ComArt_Id;
		
		private int _ComArt_ArtId;
		
		private int _ComArt_F_ARTICLE_SagId;
		
		private System.Nullable<int> _ComArt_F_ARTENUMREF_SagId;
		
		private System.Nullable<int> _ComArt_F_CONDITION_SagId;
		
		private decimal _ComArt_Quantity;
		
		private bool _ComArt_Default;
		
		private bool _ComArt_Sync;
		
		private bool _ComArt_Active;
		
		private System.Nullable<int> _Pre_Id;
		
		private EntitySet<CompositionArticleAttribute> _CompositionArticleAttribute;
		
		private EntitySet<CompositionArticleImage> _CompositionArticleImage;
		
		private EntityRef<Article> _Article;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnComArt_IdChanging(int value);
    partial void OnComArt_IdChanged();
    partial void OnComArt_ArtIdChanging(int value);
    partial void OnComArt_ArtIdChanged();
    partial void OnComArt_F_ARTICLE_SagIdChanging(int value);
    partial void OnComArt_F_ARTICLE_SagIdChanged();
    partial void OnComArt_F_ARTENUMREF_SagIdChanging(System.Nullable<int> value);
    partial void OnComArt_F_ARTENUMREF_SagIdChanged();
    partial void OnComArt_F_CONDITION_SagIdChanging(System.Nullable<int> value);
    partial void OnComArt_F_CONDITION_SagIdChanged();
    partial void OnComArt_QuantityChanging(decimal value);
    partial void OnComArt_QuantityChanged();
    partial void OnComArt_DefaultChanging(bool value);
    partial void OnComArt_DefaultChanged();
    partial void OnComArt_SyncChanging(bool value);
    partial void OnComArt_SyncChanged();
    partial void OnComArt_ActiveChanging(bool value);
    partial void OnComArt_ActiveChanged();
    partial void OnPre_IdChanging(System.Nullable<int> value);
    partial void OnPre_IdChanged();
    #endregion
		
		public CompositionArticle()
		{
			this._CompositionArticleAttribute = new EntitySet<CompositionArticleAttribute>(new Action<CompositionArticleAttribute>(this.attach_CompositionArticleAttribute), new Action<CompositionArticleAttribute>(this.detach_CompositionArticleAttribute));
			this._CompositionArticleImage = new EntitySet<CompositionArticleImage>(new Action<CompositionArticleImage>(this.attach_CompositionArticleImage), new Action<CompositionArticleImage>(this.detach_CompositionArticleImage));
			this._Article = default(EntityRef<Article>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComArt_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ComArt_Id
		{
			get
			{
				return this._ComArt_Id;
			}
			set
			{
				if ((this._ComArt_Id != value))
				{
					this.OnComArt_IdChanging(value);
					this.SendPropertyChanging();
					this._ComArt_Id = value;
					this.SendPropertyChanged("ComArt_Id");
					this.OnComArt_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComArt_ArtId", DbType="Int NOT NULL")]
		public int ComArt_ArtId
		{
			get
			{
				return this._ComArt_ArtId;
			}
			set
			{
				if ((this._ComArt_ArtId != value))
				{
					if (this._Article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnComArt_ArtIdChanging(value);
					this.SendPropertyChanging();
					this._ComArt_ArtId = value;
					this.SendPropertyChanged("ComArt_ArtId");
					this.OnComArt_ArtIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComArt_F_ARTICLE_SagId", DbType="Int NOT NULL")]
		public int ComArt_F_ARTICLE_SagId
		{
			get
			{
				return this._ComArt_F_ARTICLE_SagId;
			}
			set
			{
				if ((this._ComArt_F_ARTICLE_SagId != value))
				{
					this.OnComArt_F_ARTICLE_SagIdChanging(value);
					this.SendPropertyChanging();
					this._ComArt_F_ARTICLE_SagId = value;
					this.SendPropertyChanged("ComArt_F_ARTICLE_SagId");
					this.OnComArt_F_ARTICLE_SagIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComArt_F_ARTENUMREF_SagId", DbType="Int")]
		public System.Nullable<int> ComArt_F_ARTENUMREF_SagId
		{
			get
			{
				return this._ComArt_F_ARTENUMREF_SagId;
			}
			set
			{
				if ((this._ComArt_F_ARTENUMREF_SagId != value))
				{
					this.OnComArt_F_ARTENUMREF_SagIdChanging(value);
					this.SendPropertyChanging();
					this._ComArt_F_ARTENUMREF_SagId = value;
					this.SendPropertyChanged("ComArt_F_ARTENUMREF_SagId");
					this.OnComArt_F_ARTENUMREF_SagIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComArt_F_CONDITION_SagId", DbType="Int")]
		public System.Nullable<int> ComArt_F_CONDITION_SagId
		{
			get
			{
				return this._ComArt_F_CONDITION_SagId;
			}
			set
			{
				if ((this._ComArt_F_CONDITION_SagId != value))
				{
					this.OnComArt_F_CONDITION_SagIdChanging(value);
					this.SendPropertyChanging();
					this._ComArt_F_CONDITION_SagId = value;
					this.SendPropertyChanged("ComArt_F_CONDITION_SagId");
					this.OnComArt_F_CONDITION_SagIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComArt_Quantity", DbType="Decimal(20,6) NOT NULL")]
		public decimal ComArt_Quantity
		{
			get
			{
				return this._ComArt_Quantity;
			}
			set
			{
				if ((this._ComArt_Quantity != value))
				{
					this.OnComArt_QuantityChanging(value);
					this.SendPropertyChanging();
					this._ComArt_Quantity = value;
					this.SendPropertyChanged("ComArt_Quantity");
					this.OnComArt_QuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComArt_Default", DbType="Bit NOT NULL")]
		public bool ComArt_Default
		{
			get
			{
				return this._ComArt_Default;
			}
			set
			{
				if ((this._ComArt_Default != value))
				{
					this.OnComArt_DefaultChanging(value);
					this.SendPropertyChanging();
					this._ComArt_Default = value;
					this.SendPropertyChanged("ComArt_Default");
					this.OnComArt_DefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComArt_Sync", DbType="Bit NOT NULL")]
		public bool ComArt_Sync
		{
			get
			{
				return this._ComArt_Sync;
			}
			set
			{
				if ((this._ComArt_Sync != value))
				{
					this.OnComArt_SyncChanging(value);
					this.SendPropertyChanging();
					this._ComArt_Sync = value;
					this.SendPropertyChanged("ComArt_Sync");
					this.OnComArt_SyncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComArt_Active", DbType="Bit NOT NULL")]
		public bool ComArt_Active
		{
			get
			{
				return this._ComArt_Active;
			}
			set
			{
				if ((this._ComArt_Active != value))
				{
					this.OnComArt_ActiveChanging(value);
					this.SendPropertyChanging();
					this._ComArt_Active = value;
					this.SendPropertyChanged("ComArt_Active");
					this.OnComArt_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pre_Id", DbType="Int")]
		public System.Nullable<int> Pre_Id
		{
			get
			{
				return this._Pre_Id;
			}
			set
			{
				if ((this._Pre_Id != value))
				{
					this.OnPre_IdChanging(value);
					this.SendPropertyChanging();
					this._Pre_Id = value;
					this.SendPropertyChanged("Pre_Id");
					this.OnPre_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompositionArticle_CompositionArticleAttribute", Storage="_CompositionArticleAttribute", ThisKey="ComArt_Id", OtherKey="Caa_ComArtId")]
		public EntitySet<CompositionArticleAttribute> CompositionArticleAttribute
		{
			get
			{
				return this._CompositionArticleAttribute;
			}
			set
			{
				this._CompositionArticleAttribute.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompositionArticle_CompositionArticleImage", Storage="_CompositionArticleImage", ThisKey="ComArt_Id", OtherKey="ComArt_Id")]
		public EntitySet<CompositionArticleImage> CompositionArticleImage
		{
			get
			{
				return this._CompositionArticleImage;
			}
			set
			{
				this._CompositionArticleImage.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_CompositionArticle", Storage="_Article", ThisKey="ComArt_ArtId", OtherKey="Art_Id", IsForeignKey=true)]
		public Article Article
		{
			get
			{
				return this._Article.Entity;
			}
			set
			{
				Article previousValue = this._Article.Entity;
				if (((previousValue != value) 
							|| (this._Article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Article.Entity = null;
						previousValue.CompositionArticle.Remove(this);
					}
					this._Article.Entity = value;
					if ((value != null))
					{
						value.CompositionArticle.Add(this);
						this._ComArt_ArtId = value.Art_Id;
					}
					else
					{
						this._ComArt_ArtId = default(int);
					}
					this.SendPropertyChanged("Article");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CompositionArticleAttribute(CompositionArticleAttribute entity)
		{
			this.SendPropertyChanging();
			entity.CompositionArticle = this;
		}
		
		private void detach_CompositionArticleAttribute(CompositionArticleAttribute entity)
		{
			this.SendPropertyChanging();
			entity.CompositionArticle = null;
		}
		
		private void attach_CompositionArticleImage(CompositionArticleImage entity)
		{
			this.SendPropertyChanging();
			entity.CompositionArticle = this;
		}
		
		private void detach_CompositionArticleImage(CompositionArticleImage entity)
		{
			this.SendPropertyChanging();
			entity.CompositionArticle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompositionArticleImage")]
	public partial class CompositionArticleImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ComArt_Id;
		
		private int _ImaArt_Id;
		
		private EntityRef<ArticleImage> _ArticleImage;
		
		private EntityRef<CompositionArticle> _CompositionArticle;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnComArt_IdChanging(int value);
    partial void OnComArt_IdChanged();
    partial void OnImaArt_IdChanging(int value);
    partial void OnImaArt_IdChanged();
    #endregion
		
		public CompositionArticleImage()
		{
			this._ArticleImage = default(EntityRef<ArticleImage>);
			this._CompositionArticle = default(EntityRef<CompositionArticle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComArt_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ComArt_Id
		{
			get
			{
				return this._ComArt_Id;
			}
			set
			{
				if ((this._ComArt_Id != value))
				{
					if (this._CompositionArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnComArt_IdChanging(value);
					this.SendPropertyChanging();
					this._ComArt_Id = value;
					this.SendPropertyChanged("ComArt_Id");
					this.OnComArt_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImaArt_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ImaArt_Id
		{
			get
			{
				return this._ImaArt_Id;
			}
			set
			{
				if ((this._ImaArt_Id != value))
				{
					if (this._ArticleImage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImaArt_IdChanging(value);
					this.SendPropertyChanging();
					this._ImaArt_Id = value;
					this.SendPropertyChanged("ImaArt_Id");
					this.OnImaArt_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArticleImage_CompositionArticleImage", Storage="_ArticleImage", ThisKey="ImaArt_Id", OtherKey="ImaArt_Id", IsForeignKey=true)]
		public ArticleImage ArticleImage
		{
			get
			{
				return this._ArticleImage.Entity;
			}
			set
			{
				ArticleImage previousValue = this._ArticleImage.Entity;
				if (((previousValue != value) 
							|| (this._ArticleImage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ArticleImage.Entity = null;
						previousValue.CompositionArticleImage.Remove(this);
					}
					this._ArticleImage.Entity = value;
					if ((value != null))
					{
						value.CompositionArticleImage.Add(this);
						this._ImaArt_Id = value.ImaArt_Id;
					}
					else
					{
						this._ImaArt_Id = default(int);
					}
					this.SendPropertyChanged("ArticleImage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompositionArticle_CompositionArticleImage", Storage="_CompositionArticle", ThisKey="ComArt_Id", OtherKey="ComArt_Id", IsForeignKey=true)]
		public CompositionArticle CompositionArticle
		{
			get
			{
				return this._CompositionArticle.Entity;
			}
			set
			{
				CompositionArticle previousValue = this._CompositionArticle.Entity;
				if (((previousValue != value) 
							|| (this._CompositionArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompositionArticle.Entity = null;
						previousValue.CompositionArticleImage.Remove(this);
					}
					this._CompositionArticle.Entity = value;
					if ((value != null))
					{
						value.CompositionArticleImage.Add(this);
						this._ComArt_Id = value.ComArt_Id;
					}
					else
					{
						this._ComArt_Id = default(int);
					}
					this.SendPropertyChanged("CompositionArticle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tax")]
	public partial class Tax : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Sag_Id;
		
		private int _Pre_Id;
		
		private string _Sag_Name;
		
		private string _Pre_Name;
		
		private string _Sag_ArticleRemise;
		
		private string _Sag_ArticleRemplacement;
		
		private string _Sag_ArticleReduction;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSag_IdChanging(int value);
    partial void OnSag_IdChanged();
    partial void OnPre_IdChanging(int value);
    partial void OnPre_IdChanged();
    partial void OnSag_NameChanging(string value);
    partial void OnSag_NameChanged();
    partial void OnPre_NameChanging(string value);
    partial void OnPre_NameChanged();
    partial void OnSag_ArticleRemiseChanging(string value);
    partial void OnSag_ArticleRemiseChanged();
    partial void OnSag_ArticleRemplacementChanging(string value);
    partial void OnSag_ArticleRemplacementChanged();
    partial void OnSag_ArticleReductionChanging(string value);
    partial void OnSag_ArticleReductionChanged();
    #endregion
		
		public Tax()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Sag_Id
		{
			get
			{
				return this._Sag_Id;
			}
			set
			{
				if ((this._Sag_Id != value))
				{
					this.OnSag_IdChanging(value);
					this.SendPropertyChanging();
					this._Sag_Id = value;
					this.SendPropertyChanged("Sag_Id");
					this.OnSag_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pre_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Pre_Id
		{
			get
			{
				return this._Pre_Id;
			}
			set
			{
				if ((this._Pre_Id != value))
				{
					this.OnPre_IdChanging(value);
					this.SendPropertyChanging();
					this._Pre_Id = value;
					this.SendPropertyChanged("Pre_Id");
					this.OnPre_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_Name", DbType="VarChar(35)")]
		public string Sag_Name
		{
			get
			{
				return this._Sag_Name;
			}
			set
			{
				if ((this._Sag_Name != value))
				{
					this.OnSag_NameChanging(value);
					this.SendPropertyChanging();
					this._Sag_Name = value;
					this.SendPropertyChanged("Sag_Name");
					this.OnSag_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pre_Name", DbType="VarChar(32)")]
		public string Pre_Name
		{
			get
			{
				return this._Pre_Name;
			}
			set
			{
				if ((this._Pre_Name != value))
				{
					this.OnPre_NameChanging(value);
					this.SendPropertyChanging();
					this._Pre_Name = value;
					this.SendPropertyChanged("Pre_Name");
					this.OnPre_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_ArticleRemise", DbType="VarChar(20)")]
		public string Sag_ArticleRemise
		{
			get
			{
				return this._Sag_ArticleRemise;
			}
			set
			{
				if ((this._Sag_ArticleRemise != value))
				{
					this.OnSag_ArticleRemiseChanging(value);
					this.SendPropertyChanging();
					this._Sag_ArticleRemise = value;
					this.SendPropertyChanged("Sag_ArticleRemise");
					this.OnSag_ArticleRemiseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_ArticleRemplacement", DbType="VarChar(20)")]
		public string Sag_ArticleRemplacement
		{
			get
			{
				return this._Sag_ArticleRemplacement;
			}
			set
			{
				if ((this._Sag_ArticleRemplacement != value))
				{
					this.OnSag_ArticleRemplacementChanging(value);
					this.SendPropertyChanging();
					this._Sag_ArticleRemplacement = value;
					this.SendPropertyChanged("Sag_ArticleRemplacement");
					this.OnSag_ArticleRemplacementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_ArticleReduction", DbType="VarChar(20)")]
		public string Sag_ArticleReduction
		{
			get
			{
				return this._Sag_ArticleReduction;
			}
			set
			{
				if ((this._Sag_ArticleReduction != value))
				{
					this.OnSag_ArticleReductionChanging(value);
					this.SendPropertyChanging();
					this._Sag_ArticleReduction = value;
					this.SendPropertyChanged("Sag_ArticleReduction");
					this.OnSag_ArticleReductionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Article")]
	public partial class Article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Art_Id;
		
		private string _Art_Name;
		
		private string _Art_Description;
		
		private string _Art_Description_Short;
		
		private string _Art_LinkRewrite;
		
		private string _Art_MetaTitle;
		
		private string _Art_MetaKeyword;
		
		private string _Art_MetaDescription;
		
		private string _Art_Ref;
		
		private string _Art_Ean13;
		
		private bool _Art_Pack;
		
		private System.Nullable<bool> _Art_Solde;
		
		private bool _Art_Active;
		
		private bool _Art_Sync;
		
		private System.DateTime _Art_Date;
		
		private string _Art_RedirectType;
		
		private int _Art_RedirectProduct;
		
		private int _Art_Manufacturer;
		
		private int _Art_Supplier;
		
		private int _Sag_Id;
		
		private System.Nullable<int> _Pre_Id;
		
		private int _Cat_Id;
		
		private int _Art_Type;
		
		private bool _Art_SyncPrice;
		
		private EntitySet<ArticleCatalog> _ArticleCatalog;
		
		private EntitySet<Characteristic> _Characteristic;
		
		private EntitySet<ArticleImage> _ArticleImage;
		
		private EntitySet<ConditioningArticle> _ConditioningArticle;
		
		private EntitySet<Attachment> _Attachment;
		
		private EntitySet<CompositionArticleAttributeGroup> _CompositionArticleAttributeGroup;
		
		private EntitySet<CompositionArticle> _CompositionArticle;
		
		private EntitySet<AttributeArticle> _AttributeArticle;
		
		private EntitySet<ArticleAdditionalField> _ArticleAdditionalField;
		
		private EntityRef<Catalog> _Catalog;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArt_IdChanging(int value);
    partial void OnArt_IdChanged();
    partial void OnArt_NameChanging(string value);
    partial void OnArt_NameChanged();
    partial void OnArt_DescriptionChanging(string value);
    partial void OnArt_DescriptionChanged();
    partial void OnArt_Description_ShortChanging(string value);
    partial void OnArt_Description_ShortChanged();
    partial void OnArt_LinkRewriteChanging(string value);
    partial void OnArt_LinkRewriteChanged();
    partial void OnArt_MetaTitleChanging(string value);
    partial void OnArt_MetaTitleChanged();
    partial void OnArt_MetaKeywordChanging(string value);
    partial void OnArt_MetaKeywordChanged();
    partial void OnArt_MetaDescriptionChanging(string value);
    partial void OnArt_MetaDescriptionChanged();
    partial void OnArt_RefChanging(string value);
    partial void OnArt_RefChanged();
    partial void OnArt_Ean13Changing(string value);
    partial void OnArt_Ean13Changed();
    partial void OnArt_PackChanging(bool value);
    partial void OnArt_PackChanged();
    partial void OnArt_SoldeChanging(System.Nullable<bool> value);
    partial void OnArt_SoldeChanged();
    partial void OnArt_ActiveChanging(bool value);
    partial void OnArt_ActiveChanged();
    partial void OnArt_SyncChanging(bool value);
    partial void OnArt_SyncChanged();
    partial void OnArt_DateChanging(System.DateTime value);
    partial void OnArt_DateChanged();
    partial void OnArt_RedirectTypeChanging(string value);
    partial void OnArt_RedirectTypeChanged();
    partial void OnArt_RedirectProductChanging(int value);
    partial void OnArt_RedirectProductChanged();
    partial void OnArt_ManufacturerChanging(int value);
    partial void OnArt_ManufacturerChanged();
    partial void OnArt_SupplierChanging(int value);
    partial void OnArt_SupplierChanged();
    partial void OnSag_IdChanging(int value);
    partial void OnSag_IdChanged();
    partial void OnPre_IdChanging(System.Nullable<int> value);
    partial void OnPre_IdChanged();
    partial void OnCat_IdChanging(int value);
    partial void OnCat_IdChanged();
    partial void OnArt_TypeChanging(int value);
    partial void OnArt_TypeChanged();
    partial void OnArt_SyncPriceChanging(bool value);
    partial void OnArt_SyncPriceChanged();
    #endregion
		
		public Article()
		{
			this._ArticleCatalog = new EntitySet<ArticleCatalog>(new Action<ArticleCatalog>(this.attach_ArticleCatalog), new Action<ArticleCatalog>(this.detach_ArticleCatalog));
			this._Characteristic = new EntitySet<Characteristic>(new Action<Characteristic>(this.attach_Characteristic), new Action<Characteristic>(this.detach_Characteristic));
			this._ArticleImage = new EntitySet<ArticleImage>(new Action<ArticleImage>(this.attach_ArticleImage), new Action<ArticleImage>(this.detach_ArticleImage));
			this._ConditioningArticle = new EntitySet<ConditioningArticle>(new Action<ConditioningArticle>(this.attach_ConditioningArticle), new Action<ConditioningArticle>(this.detach_ConditioningArticle));
			this._Attachment = new EntitySet<Attachment>(new Action<Attachment>(this.attach_Attachment), new Action<Attachment>(this.detach_Attachment));
			this._CompositionArticleAttributeGroup = new EntitySet<CompositionArticleAttributeGroup>(new Action<CompositionArticleAttributeGroup>(this.attach_CompositionArticleAttributeGroup), new Action<CompositionArticleAttributeGroup>(this.detach_CompositionArticleAttributeGroup));
			this._CompositionArticle = new EntitySet<CompositionArticle>(new Action<CompositionArticle>(this.attach_CompositionArticle), new Action<CompositionArticle>(this.detach_CompositionArticle));
			this._AttributeArticle = new EntitySet<AttributeArticle>(new Action<AttributeArticle>(this.attach_AttributeArticle), new Action<AttributeArticle>(this.detach_AttributeArticle));
			this._ArticleAdditionalField = new EntitySet<ArticleAdditionalField>(new Action<ArticleAdditionalField>(this.attach_ArticleAdditionalField), new Action<ArticleAdditionalField>(this.detach_ArticleAdditionalField));
			this._Catalog = default(EntityRef<Catalog>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Art_Id
		{
			get
			{
				return this._Art_Id;
			}
			set
			{
				if ((this._Art_Id != value))
				{
					this.OnArt_IdChanging(value);
					this.SendPropertyChanging();
					this._Art_Id = value;
					this.SendPropertyChanged("Art_Id");
					this.OnArt_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art_Name", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string Art_Name
		{
			get
			{
				return this._Art_Name;
			}
			set
			{
				if ((this._Art_Name != value))
				{
					this.OnArt_NameChanging(value);
					this.SendPropertyChanging();
					this._Art_Name = value;
					this.SendPropertyChanged("Art_Name");
					this.OnArt_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Art_Description
		{
			get
			{
				return this._Art_Description;
			}
			set
			{
				if ((this._Art_Description != value))
				{
					this.OnArt_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Art_Description = value;
					this.SendPropertyChanged("Art_Description");
					this.OnArt_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art_Description_Short", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Art_Description_Short
		{
			get
			{
				return this._Art_Description_Short;
			}
			set
			{
				if ((this._Art_Description_Short != value))
				{
					this.OnArt_Description_ShortChanging(value);
					this.SendPropertyChanging();
					this._Art_Description_Short = value;
					this.SendPropertyChanged("Art_Description_Short");
					this.OnArt_Description_ShortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art_LinkRewrite", DbType="VarChar(128)")]
		public string Art_LinkRewrite
		{
			get
			{
				return this._Art_LinkRewrite;
			}
			set
			{
				if ((this._Art_LinkRewrite != value))
				{
					this.OnArt_LinkRewriteChanging(value);
					this.SendPropertyChanging();
					this._Art_LinkRewrite = value;
					this.SendPropertyChanged("Art_LinkRewrite");
					this.OnArt_LinkRewriteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art_MetaTitle", DbType="VarChar(128)")]
		public string Art_MetaTitle
		{
			get
			{
				return this._Art_MetaTitle;
			}
			set
			{
				if ((this._Art_MetaTitle != value))
				{
					this.OnArt_MetaTitleChanging(value);
					this.SendPropertyChanging();
					this._Art_MetaTitle = value;
					this.SendPropertyChanged("Art_MetaTitle");
					this.OnArt_MetaTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art_MetaKeyword", DbType="VarChar(255)")]
		public string Art_MetaKeyword
		{
			get
			{
				return this._Art_MetaKeyword;
			}
			set
			{
				if ((this._Art_MetaKeyword != value))
				{
					this.OnArt_MetaKeywordChanging(value);
					this.SendPropertyChanging();
					this._Art_MetaKeyword = value;
					this.SendPropertyChanged("Art_MetaKeyword");
					this.OnArt_MetaKeywordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art_MetaDescription", DbType="VarChar(255)")]
		public string Art_MetaDescription
		{
			get
			{
				return this._Art_MetaDescription;
			}
			set
			{
				if ((this._Art_MetaDescription != value))
				{
					this.OnArt_MetaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Art_MetaDescription = value;
					this.SendPropertyChanged("Art_MetaDescription");
					this.OnArt_MetaDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art_Ref", DbType="VarChar(19) NOT NULL", CanBeNull=false)]
		public string Art_Ref
		{
			get
			{
				return this._Art_Ref;
			}
			set
			{
				if ((this._Art_Ref != value))
				{
					this.OnArt_RefChanging(value);
					this.SendPropertyChanging();
					this._Art_Ref = value;
					this.SendPropertyChanged("Art_Ref");
					this.OnArt_RefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art_Ean13", DbType="VarChar(13)")]
		public string Art_Ean13
		{
			get
			{
				return this._Art_Ean13;
			}
			set
			{
				if ((this._Art_Ean13 != value))
				{
					this.OnArt_Ean13Changing(value);
					this.SendPropertyChanging();
					this._Art_Ean13 = value;
					this.SendPropertyChanged("Art_Ean13");
					this.OnArt_Ean13Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art_Pack", DbType="Bit NOT NULL")]
		public bool Art_Pack
		{
			get
			{
				return this._Art_Pack;
			}
			set
			{
				if ((this._Art_Pack != value))
				{
					this.OnArt_PackChanging(value);
					this.SendPropertyChanging();
					this._Art_Pack = value;
					this.SendPropertyChanged("Art_Pack");
					this.OnArt_PackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art_Solde", DbType="Bit")]
		public System.Nullable<bool> Art_Solde
		{
			get
			{
				return this._Art_Solde;
			}
			set
			{
				if ((this._Art_Solde != value))
				{
					this.OnArt_SoldeChanging(value);
					this.SendPropertyChanging();
					this._Art_Solde = value;
					this.SendPropertyChanged("Art_Solde");
					this.OnArt_SoldeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art_Active", DbType="Bit NOT NULL")]
		public bool Art_Active
		{
			get
			{
				return this._Art_Active;
			}
			set
			{
				if ((this._Art_Active != value))
				{
					this.OnArt_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Art_Active = value;
					this.SendPropertyChanged("Art_Active");
					this.OnArt_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art_Sync", DbType="Bit NOT NULL")]
		public bool Art_Sync
		{
			get
			{
				return this._Art_Sync;
			}
			set
			{
				if ((this._Art_Sync != value))
				{
					this.OnArt_SyncChanging(value);
					this.SendPropertyChanging();
					this._Art_Sync = value;
					this.SendPropertyChanged("Art_Sync");
					this.OnArt_SyncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Art_Date
		{
			get
			{
				return this._Art_Date;
			}
			set
			{
				if ((this._Art_Date != value))
				{
					this.OnArt_DateChanging(value);
					this.SendPropertyChanging();
					this._Art_Date = value;
					this.SendPropertyChanged("Art_Date");
					this.OnArt_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art_RedirectType", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string Art_RedirectType
		{
			get
			{
				return this._Art_RedirectType;
			}
			set
			{
				if ((this._Art_RedirectType != value))
				{
					this.OnArt_RedirectTypeChanging(value);
					this.SendPropertyChanging();
					this._Art_RedirectType = value;
					this.SendPropertyChanged("Art_RedirectType");
					this.OnArt_RedirectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art_RedirectProduct", DbType="Int NOT NULL")]
		public int Art_RedirectProduct
		{
			get
			{
				return this._Art_RedirectProduct;
			}
			set
			{
				if ((this._Art_RedirectProduct != value))
				{
					this.OnArt_RedirectProductChanging(value);
					this.SendPropertyChanging();
					this._Art_RedirectProduct = value;
					this.SendPropertyChanged("Art_RedirectProduct");
					this.OnArt_RedirectProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art_Manufacturer", DbType="Int NOT NULL")]
		public int Art_Manufacturer
		{
			get
			{
				return this._Art_Manufacturer;
			}
			set
			{
				if ((this._Art_Manufacturer != value))
				{
					this.OnArt_ManufacturerChanging(value);
					this.SendPropertyChanging();
					this._Art_Manufacturer = value;
					this.SendPropertyChanged("Art_Manufacturer");
					this.OnArt_ManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art_Supplier", DbType="Int NOT NULL")]
		public int Art_Supplier
		{
			get
			{
				return this._Art_Supplier;
			}
			set
			{
				if ((this._Art_Supplier != value))
				{
					this.OnArt_SupplierChanging(value);
					this.SendPropertyChanging();
					this._Art_Supplier = value;
					this.SendPropertyChanged("Art_Supplier");
					this.OnArt_SupplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_Id", DbType="Int NOT NULL")]
		public int Sag_Id
		{
			get
			{
				return this._Sag_Id;
			}
			set
			{
				if ((this._Sag_Id != value))
				{
					this.OnSag_IdChanging(value);
					this.SendPropertyChanging();
					this._Sag_Id = value;
					this.SendPropertyChanged("Sag_Id");
					this.OnSag_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pre_Id", DbType="Int")]
		public System.Nullable<int> Pre_Id
		{
			get
			{
				return this._Pre_Id;
			}
			set
			{
				if ((this._Pre_Id != value))
				{
					this.OnPre_IdChanging(value);
					this.SendPropertyChanging();
					this._Pre_Id = value;
					this.SendPropertyChanged("Pre_Id");
					this.OnPre_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cat_Id", DbType="Int NOT NULL")]
		public int Cat_Id
		{
			get
			{
				return this._Cat_Id;
			}
			set
			{
				if ((this._Cat_Id != value))
				{
					if (this._Catalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCat_IdChanging(value);
					this.SendPropertyChanging();
					this._Cat_Id = value;
					this.SendPropertyChanged("Cat_Id");
					this.OnCat_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art_Type", DbType="Int NOT NULL")]
		public int Art_Type
		{
			get
			{
				return this._Art_Type;
			}
			set
			{
				if ((this._Art_Type != value))
				{
					this.OnArt_TypeChanging(value);
					this.SendPropertyChanging();
					this._Art_Type = value;
					this.SendPropertyChanged("Art_Type");
					this.OnArt_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art_SyncPrice", DbType="Bit NOT NULL")]
		public bool Art_SyncPrice
		{
			get
			{
				return this._Art_SyncPrice;
			}
			set
			{
				if ((this._Art_SyncPrice != value))
				{
					this.OnArt_SyncPriceChanging(value);
					this.SendPropertyChanging();
					this._Art_SyncPrice = value;
					this.SendPropertyChanged("Art_SyncPrice");
					this.OnArt_SyncPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_ArticleCatalog", Storage="_ArticleCatalog", ThisKey="Art_Id", OtherKey="Art_Id")]
		public EntitySet<ArticleCatalog> ArticleCatalog
		{
			get
			{
				return this._ArticleCatalog;
			}
			set
			{
				this._ArticleCatalog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_Characteristic", Storage="_Characteristic", ThisKey="Art_Id", OtherKey="Art_Id")]
		public EntitySet<Characteristic> Characteristic
		{
			get
			{
				return this._Characteristic;
			}
			set
			{
				this._Characteristic.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_ArticleImage", Storage="_ArticleImage", ThisKey="Art_Id", OtherKey="Art_Id")]
		public EntitySet<ArticleImage> ArticleImage
		{
			get
			{
				return this._ArticleImage;
			}
			set
			{
				this._ArticleImage.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_ConditioningArticle", Storage="_ConditioningArticle", ThisKey="Art_Id", OtherKey="Art_Id")]
		public EntitySet<ConditioningArticle> ConditioningArticle
		{
			get
			{
				return this._ConditioningArticle;
			}
			set
			{
				this._ConditioningArticle.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_Attachment", Storage="_Attachment", ThisKey="Art_Id", OtherKey="Art_Id")]
		public EntitySet<Attachment> Attachment
		{
			get
			{
				return this._Attachment;
			}
			set
			{
				this._Attachment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_CompositionArticleAttributeGroup", Storage="_CompositionArticleAttributeGroup", ThisKey="Art_Id", OtherKey="Cag_ArtId")]
		public EntitySet<CompositionArticleAttributeGroup> CompositionArticleAttributeGroup
		{
			get
			{
				return this._CompositionArticleAttributeGroup;
			}
			set
			{
				this._CompositionArticleAttributeGroup.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_CompositionArticle", Storage="_CompositionArticle", ThisKey="Art_Id", OtherKey="ComArt_ArtId")]
		public EntitySet<CompositionArticle> CompositionArticle
		{
			get
			{
				return this._CompositionArticle;
			}
			set
			{
				this._CompositionArticle.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_AttributeArticle", Storage="_AttributeArticle", ThisKey="Art_Id", OtherKey="Art_Id")]
		public EntitySet<AttributeArticle> AttributeArticle
		{
			get
			{
				return this._AttributeArticle;
			}
			set
			{
				this._AttributeArticle.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_ArticleAdditionalField", Storage="_ArticleAdditionalField", ThisKey="Art_Id", OtherKey="Art_id")]
		public EntitySet<ArticleAdditionalField> ArticleAdditionalField
		{
			get
			{
				return this._ArticleAdditionalField;
			}
			set
			{
				this._ArticleAdditionalField.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catalog_Article", Storage="_Catalog", ThisKey="Cat_Id", OtherKey="Cat_Id", IsForeignKey=true)]
		public Catalog Catalog
		{
			get
			{
				return this._Catalog.Entity;
			}
			set
			{
				Catalog previousValue = this._Catalog.Entity;
				if (((previousValue != value) 
							|| (this._Catalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Catalog.Entity = null;
						previousValue.Article.Remove(this);
					}
					this._Catalog.Entity = value;
					if ((value != null))
					{
						value.Article.Add(this);
						this._Cat_Id = value.Cat_Id;
					}
					else
					{
						this._Cat_Id = default(int);
					}
					this.SendPropertyChanged("Catalog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ArticleCatalog(ArticleCatalog entity)
		{
			this.SendPropertyChanging();
			entity.Article = this;
		}
		
		private void detach_ArticleCatalog(ArticleCatalog entity)
		{
			this.SendPropertyChanging();
			entity.Article = null;
		}
		
		private void attach_Characteristic(Characteristic entity)
		{
			this.SendPropertyChanging();
			entity.Article = this;
		}
		
		private void detach_Characteristic(Characteristic entity)
		{
			this.SendPropertyChanging();
			entity.Article = null;
		}
		
		private void attach_ArticleImage(ArticleImage entity)
		{
			this.SendPropertyChanging();
			entity.Article = this;
		}
		
		private void detach_ArticleImage(ArticleImage entity)
		{
			this.SendPropertyChanging();
			entity.Article = null;
		}
		
		private void attach_ConditioningArticle(ConditioningArticle entity)
		{
			this.SendPropertyChanging();
			entity.Article = this;
		}
		
		private void detach_ConditioningArticle(ConditioningArticle entity)
		{
			this.SendPropertyChanging();
			entity.Article = null;
		}
		
		private void attach_Attachment(Attachment entity)
		{
			this.SendPropertyChanging();
			entity.Article = this;
		}
		
		private void detach_Attachment(Attachment entity)
		{
			this.SendPropertyChanging();
			entity.Article = null;
		}
		
		private void attach_CompositionArticleAttributeGroup(CompositionArticleAttributeGroup entity)
		{
			this.SendPropertyChanging();
			entity.Article = this;
		}
		
		private void detach_CompositionArticleAttributeGroup(CompositionArticleAttributeGroup entity)
		{
			this.SendPropertyChanging();
			entity.Article = null;
		}
		
		private void attach_CompositionArticle(CompositionArticle entity)
		{
			this.SendPropertyChanging();
			entity.Article = this;
		}
		
		private void detach_CompositionArticle(CompositionArticle entity)
		{
			this.SendPropertyChanging();
			entity.Article = null;
		}
		
		private void attach_AttributeArticle(AttributeArticle entity)
		{
			this.SendPropertyChanging();
			entity.Article = this;
		}
		
		private void detach_AttributeArticle(AttributeArticle entity)
		{
			this.SendPropertyChanging();
			entity.Article = null;
		}
		
		private void attach_ArticleAdditionalField(ArticleAdditionalField entity)
		{
			this.SendPropertyChanging();
			entity.Article = this;
		}
		
		private void detach_ArticleAdditionalField(ArticleAdditionalField entity)
		{
			this.SendPropertyChanging();
			entity.Article = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Article")]
	public partial class Article_Sync_Infos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Art_Id;
		
		private string _Art_Name;
		
		private string _Art_Ref;
		
		private System.Nullable<int> _Pre_Id;
		
		private int _Art_Type;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArt_IdChanging(int value);
    partial void OnArt_IdChanged();
    partial void OnArt_NameChanging(string value);
    partial void OnArt_NameChanged();
    partial void OnArt_RefChanging(string value);
    partial void OnArt_RefChanged();
    partial void OnPre_IdChanging(System.Nullable<int> value);
    partial void OnPre_IdChanged();
    partial void OnArt_TypeChanging(int value);
    partial void OnArt_TypeChanged();
    #endregion
		
		public Article_Sync_Infos()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Art_Id
		{
			get
			{
				return this._Art_Id;
			}
			set
			{
				if ((this._Art_Id != value))
				{
					this.OnArt_IdChanging(value);
					this.SendPropertyChanging();
					this._Art_Id = value;
					this.SendPropertyChanged("Art_Id");
					this.OnArt_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art_Name", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string Art_Name
		{
			get
			{
				return this._Art_Name;
			}
			set
			{
				if ((this._Art_Name != value))
				{
					this.OnArt_NameChanging(value);
					this.SendPropertyChanging();
					this._Art_Name = value;
					this.SendPropertyChanged("Art_Name");
					this.OnArt_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art_Ref", DbType="VarChar(19) NOT NULL", CanBeNull=false)]
		public string Art_Ref
		{
			get
			{
				return this._Art_Ref;
			}
			set
			{
				if ((this._Art_Ref != value))
				{
					this.OnArt_RefChanging(value);
					this.SendPropertyChanging();
					this._Art_Ref = value;
					this.SendPropertyChanged("Art_Ref");
					this.OnArt_RefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pre_Id", DbType="Int")]
		public System.Nullable<int> Pre_Id
		{
			get
			{
				return this._Pre_Id;
			}
			set
			{
				if ((this._Pre_Id != value))
				{
					this.OnPre_IdChanging(value);
					this.SendPropertyChanging();
					this._Pre_Id = value;
					this.SendPropertyChanged("Pre_Id");
					this.OnPre_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art_Type", DbType="Int NOT NULL")]
		public int Art_Type
		{
			get
			{
				return this._Art_Type;
			}
			set
			{
				if ((this._Art_Type != value))
				{
					this.OnArt_TypeChanging(value);
					this.SendPropertyChanging();
					this._Art_Type = value;
					this.SendPropertyChanged("Art_Type");
					this.OnArt_TypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ImportSageFilter")]
	public partial class ImportSageFilter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Imp_Id;
		
		private string _Imp_Value;
		
		private int _Imp_TypeSearchValue;
		
		private int _Imp_TargetData;
		
		private bool _Imp_Active;
		
		private string _Sag_Infolibre;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImp_IdChanging(int value);
    partial void OnImp_IdChanged();
    partial void OnImp_ValueChanging(string value);
    partial void OnImp_ValueChanged();
    partial void OnImp_TypeSearchValueChanging(int value);
    partial void OnImp_TypeSearchValueChanged();
    partial void OnImp_TargetDataChanging(int value);
    partial void OnImp_TargetDataChanged();
    partial void OnImp_ActiveChanging(bool value);
    partial void OnImp_ActiveChanged();
    partial void OnSag_InfolibreChanging(string value);
    partial void OnSag_InfolibreChanged();
    #endregion
		
		public ImportSageFilter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imp_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Imp_Id
		{
			get
			{
				return this._Imp_Id;
			}
			set
			{
				if ((this._Imp_Id != value))
				{
					this.OnImp_IdChanging(value);
					this.SendPropertyChanging();
					this._Imp_Id = value;
					this.SendPropertyChanged("Imp_Id");
					this.OnImp_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imp_Value", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Imp_Value
		{
			get
			{
				return this._Imp_Value;
			}
			set
			{
				if ((this._Imp_Value != value))
				{
					this.OnImp_ValueChanging(value);
					this.SendPropertyChanging();
					this._Imp_Value = value;
					this.SendPropertyChanged("Imp_Value");
					this.OnImp_ValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imp_TypeSearchValue", DbType="Int NOT NULL")]
		public int Imp_TypeSearchValue
		{
			get
			{
				return this._Imp_TypeSearchValue;
			}
			set
			{
				if ((this._Imp_TypeSearchValue != value))
				{
					this.OnImp_TypeSearchValueChanging(value);
					this.SendPropertyChanging();
					this._Imp_TypeSearchValue = value;
					this.SendPropertyChanged("Imp_TypeSearchValue");
					this.OnImp_TypeSearchValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imp_TargetData", DbType="Int NOT NULL")]
		public int Imp_TargetData
		{
			get
			{
				return this._Imp_TargetData;
			}
			set
			{
				if ((this._Imp_TargetData != value))
				{
					this.OnImp_TargetDataChanging(value);
					this.SendPropertyChanging();
					this._Imp_TargetData = value;
					this.SendPropertyChanged("Imp_TargetData");
					this.OnImp_TargetDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imp_Active", DbType="Bit NOT NULL")]
		public bool Imp_Active
		{
			get
			{
				return this._Imp_Active;
			}
			set
			{
				if ((this._Imp_Active != value))
				{
					this.OnImp_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Imp_Active = value;
					this.SendPropertyChanged("Imp_Active");
					this.OnImp_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_Infolibre", DbType="VarChar(20)")]
		public string Sag_Infolibre
		{
			get
			{
				return this._Sag_Infolibre;
			}
			set
			{
				if ((this._Sag_Infolibre != value))
				{
					this.OnSag_InfolibreChanging(value);
					this.SendPropertyChanging();
					this._Sag_Infolibre = value;
					this.SendPropertyChanged("Sag_Infolibre");
					this.OnSag_InfolibreChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AttributeArticle")]
	public partial class AttributeArticle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AttArt_Id;
		
		private bool _AttArt_Default;
		
		private bool _AttArt_Sync;
		
		private bool _AttArt_Active;
		
		private int _Art_Id;
		
		private int _Att_IdFirst;
		
		private System.Nullable<int> _Att_IdSecond;
		
		private int _Sag_Id;
		
		private System.Nullable<int> _Pre_Id;
		
		private EntitySet<AttributeArticleImage> _AttributeArticleImage;
		
		private EntityRef<Article> _Article;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttArt_IdChanging(int value);
    partial void OnAttArt_IdChanged();
    partial void OnAttArt_DefaultChanging(bool value);
    partial void OnAttArt_DefaultChanged();
    partial void OnAttArt_SyncChanging(bool value);
    partial void OnAttArt_SyncChanged();
    partial void OnAttArt_ActiveChanging(bool value);
    partial void OnAttArt_ActiveChanged();
    partial void OnArt_IdChanging(int value);
    partial void OnArt_IdChanged();
    partial void OnAtt_IdFirstChanging(int value);
    partial void OnAtt_IdFirstChanged();
    partial void OnAtt_IdSecondChanging(System.Nullable<int> value);
    partial void OnAtt_IdSecondChanged();
    partial void OnSag_IdChanging(int value);
    partial void OnSag_IdChanged();
    partial void OnPre_IdChanging(System.Nullable<int> value);
    partial void OnPre_IdChanged();
    #endregion
		
		public AttributeArticle()
		{
			this._AttributeArticleImage = new EntitySet<AttributeArticleImage>(new Action<AttributeArticleImage>(this.attach_AttributeArticleImage), new Action<AttributeArticleImage>(this.detach_AttributeArticleImage));
			this._Article = default(EntityRef<Article>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttArt_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AttArt_Id
		{
			get
			{
				return this._AttArt_Id;
			}
			set
			{
				if ((this._AttArt_Id != value))
				{
					this.OnAttArt_IdChanging(value);
					this.SendPropertyChanging();
					this._AttArt_Id = value;
					this.SendPropertyChanged("AttArt_Id");
					this.OnAttArt_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttArt_Default", DbType="Bit NOT NULL")]
		public bool AttArt_Default
		{
			get
			{
				return this._AttArt_Default;
			}
			set
			{
				if ((this._AttArt_Default != value))
				{
					this.OnAttArt_DefaultChanging(value);
					this.SendPropertyChanging();
					this._AttArt_Default = value;
					this.SendPropertyChanged("AttArt_Default");
					this.OnAttArt_DefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttArt_Sync", DbType="Bit NOT NULL")]
		public bool AttArt_Sync
		{
			get
			{
				return this._AttArt_Sync;
			}
			set
			{
				if ((this._AttArt_Sync != value))
				{
					this.OnAttArt_SyncChanging(value);
					this.SendPropertyChanging();
					this._AttArt_Sync = value;
					this.SendPropertyChanged("AttArt_Sync");
					this.OnAttArt_SyncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttArt_Active", DbType="Bit NOT NULL")]
		public bool AttArt_Active
		{
			get
			{
				return this._AttArt_Active;
			}
			set
			{
				if ((this._AttArt_Active != value))
				{
					this.OnAttArt_ActiveChanging(value);
					this.SendPropertyChanging();
					this._AttArt_Active = value;
					this.SendPropertyChanged("AttArt_Active");
					this.OnAttArt_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art_Id", DbType="Int NOT NULL")]
		public int Art_Id
		{
			get
			{
				return this._Art_Id;
			}
			set
			{
				if ((this._Art_Id != value))
				{
					if (this._Article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArt_IdChanging(value);
					this.SendPropertyChanging();
					this._Art_Id = value;
					this.SendPropertyChanged("Art_Id");
					this.OnArt_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Att_IdFirst", DbType="Int NOT NULL")]
		public int Att_IdFirst
		{
			get
			{
				return this._Att_IdFirst;
			}
			set
			{
				if ((this._Att_IdFirst != value))
				{
					this.OnAtt_IdFirstChanging(value);
					this.SendPropertyChanging();
					this._Att_IdFirst = value;
					this.SendPropertyChanged("Att_IdFirst");
					this.OnAtt_IdFirstChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Att_IdSecond", DbType="Int")]
		public System.Nullable<int> Att_IdSecond
		{
			get
			{
				return this._Att_IdSecond;
			}
			set
			{
				if ((this._Att_IdSecond != value))
				{
					this.OnAtt_IdSecondChanging(value);
					this.SendPropertyChanging();
					this._Att_IdSecond = value;
					this.SendPropertyChanged("Att_IdSecond");
					this.OnAtt_IdSecondChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_Id", DbType="Int NOT NULL")]
		public int Sag_Id
		{
			get
			{
				return this._Sag_Id;
			}
			set
			{
				if ((this._Sag_Id != value))
				{
					this.OnSag_IdChanging(value);
					this.SendPropertyChanging();
					this._Sag_Id = value;
					this.SendPropertyChanged("Sag_Id");
					this.OnSag_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pre_Id", DbType="Int")]
		public System.Nullable<int> Pre_Id
		{
			get
			{
				return this._Pre_Id;
			}
			set
			{
				if ((this._Pre_Id != value))
				{
					this.OnPre_IdChanging(value);
					this.SendPropertyChanging();
					this._Pre_Id = value;
					this.SendPropertyChanged("Pre_Id");
					this.OnPre_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AttributeArticle_AttributeArticleImage", Storage="_AttributeArticleImage", ThisKey="AttArt_Id", OtherKey="AttArt_Id")]
		public EntitySet<AttributeArticleImage> AttributeArticleImage
		{
			get
			{
				return this._AttributeArticleImage;
			}
			set
			{
				this._AttributeArticleImage.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_AttributeArticle", Storage="_Article", ThisKey="Art_Id", OtherKey="Art_Id", IsForeignKey=true)]
		public Article Article
		{
			get
			{
				return this._Article.Entity;
			}
			set
			{
				Article previousValue = this._Article.Entity;
				if (((previousValue != value) 
							|| (this._Article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Article.Entity = null;
						previousValue.AttributeArticle.Remove(this);
					}
					this._Article.Entity = value;
					if ((value != null))
					{
						value.AttributeArticle.Add(this);
						this._Art_Id = value.Art_Id;
					}
					else
					{
						this._Art_Id = default(int);
					}
					this.SendPropertyChanged("Article");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AttributeArticleImage(AttributeArticleImage entity)
		{
			this.SendPropertyChanging();
			entity.AttributeArticle = this;
		}
		
		private void detach_AttributeArticleImage(AttributeArticleImage entity)
		{
			this.SendPropertyChanging();
			entity.AttributeArticle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArticleAdditionalField")]
	public partial class ArticleAdditionalField : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Art_id;
		
		private string _FieldName;
		
		private string _FieldValue;
		
		private string _FieldValue2;
		
		private EntityRef<Article> _Article;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArt_idChanging(int value);
    partial void OnArt_idChanged();
    partial void OnFieldNameChanging(string value);
    partial void OnFieldNameChanged();
    partial void OnFieldValueChanging(string value);
    partial void OnFieldValueChanged();
    partial void OnFieldValue2Changing(string value);
    partial void OnFieldValue2Changed();
    #endregion
		
		public ArticleAdditionalField()
		{
			this._Article = default(EntityRef<Article>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Art_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Art_id
		{
			get
			{
				return this._Art_id;
			}
			set
			{
				if ((this._Art_id != value))
				{
					if (this._Article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArt_idChanging(value);
					this.SendPropertyChanging();
					this._Art_id = value;
					this.SendPropertyChanged("Art_id");
					this.OnArt_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldName", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FieldName
		{
			get
			{
				return this._FieldName;
			}
			set
			{
				if ((this._FieldName != value))
				{
					this.OnFieldNameChanging(value);
					this.SendPropertyChanging();
					this._FieldName = value;
					this.SendPropertyChanged("FieldName");
					this.OnFieldNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldValue", DbType="VarChar(MAX)")]
		public string FieldValue
		{
			get
			{
				return this._FieldValue;
			}
			set
			{
				if ((this._FieldValue != value))
				{
					this.OnFieldValueChanging(value);
					this.SendPropertyChanging();
					this._FieldValue = value;
					this.SendPropertyChanged("FieldValue");
					this.OnFieldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldValue2", DbType="VarChar(MAX)")]
		public string FieldValue2
		{
			get
			{
				return this._FieldValue2;
			}
			set
			{
				if ((this._FieldValue2 != value))
				{
					this.OnFieldValue2Changing(value);
					this.SendPropertyChanging();
					this._FieldValue2 = value;
					this.SendPropertyChanged("FieldValue2");
					this.OnFieldValue2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_ArticleAdditionalField", Storage="_Article", ThisKey="Art_id", OtherKey="Art_Id", IsForeignKey=true)]
		public Article Article
		{
			get
			{
				return this._Article.Entity;
			}
			set
			{
				Article previousValue = this._Article.Entity;
				if (((previousValue != value) 
							|| (this._Article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Article.Entity = null;
						previousValue.ArticleAdditionalField.Remove(this);
					}
					this._Article.Entity = value;
					if ((value != null))
					{
						value.ArticleAdditionalField.Add(this);
						this._Art_id = value.Art_Id;
					}
					else
					{
						this._Art_id = default(int);
					}
					this.SendPropertyChanged("Article");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderMacketplace")]
	public partial class OrderMacketplace : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ord_MacketplaceId;
		
		private string _Ord_ColoumName;
		
		private string _Ord_ReplaceText;
		
		private string _Ord_MySQLRequest;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrd_MacketplaceIdChanging(int value);
    partial void OnOrd_MacketplaceIdChanged();
    partial void OnOrd_ColoumNameChanging(string value);
    partial void OnOrd_ColoumNameChanged();
    partial void OnOrd_ReplaceTextChanging(string value);
    partial void OnOrd_ReplaceTextChanged();
    partial void OnOrd_MySQLRequestChanging(string value);
    partial void OnOrd_MySQLRequestChanged();
    #endregion
		
		public OrderMacketplace()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ord_MacketplaceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Ord_MacketplaceId
		{
			get
			{
				return this._Ord_MacketplaceId;
			}
			set
			{
				if ((this._Ord_MacketplaceId != value))
				{
					this.OnOrd_MacketplaceIdChanging(value);
					this.SendPropertyChanging();
					this._Ord_MacketplaceId = value;
					this.SendPropertyChanged("Ord_MacketplaceId");
					this.OnOrd_MacketplaceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ord_ColoumName", DbType="VarChar(50)")]
		public string Ord_ColoumName
		{
			get
			{
				return this._Ord_ColoumName;
			}
			set
			{
				if ((this._Ord_ColoumName != value))
				{
					this.OnOrd_ColoumNameChanging(value);
					this.SendPropertyChanging();
					this._Ord_ColoumName = value;
					this.SendPropertyChanged("Ord_ColoumName");
					this.OnOrd_ColoumNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ord_ReplaceText", DbType="VarChar(50)")]
		public string Ord_ReplaceText
		{
			get
			{
				return this._Ord_ReplaceText;
			}
			set
			{
				if ((this._Ord_ReplaceText != value))
				{
					this.OnOrd_ReplaceTextChanging(value);
					this.SendPropertyChanging();
					this._Ord_ReplaceText = value;
					this.SendPropertyChanged("Ord_ReplaceText");
					this.OnOrd_ReplaceTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ord_MySQLRequest", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Ord_MySQLRequest
		{
			get
			{
				return this._Ord_MySQLRequest;
			}
			set
			{
				if ((this._Ord_MySQLRequest != value))
				{
					this.OnOrd_MySQLRequestChanging(value);
					this.SendPropertyChanging();
					this._Ord_MySQLRequest = value;
					this.SendPropertyChanged("Ord_MySQLRequest");
					this.OnOrd_MySQLRequestChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderCartRule")]
	public partial class OrderCartRule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Pre_id;
		
		private System.Nullable<int> _Sag_id;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPre_idChanging(int value);
    partial void OnPre_idChanged();
    partial void OnSag_idChanging(System.Nullable<int> value);
    partial void OnSag_idChanged();
    #endregion
		
		public OrderCartRule()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pre_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Pre_id
		{
			get
			{
				return this._Pre_id;
			}
			set
			{
				if ((this._Pre_id != value))
				{
					this.OnPre_idChanging(value);
					this.SendPropertyChanging();
					this._Pre_id = value;
					this.SendPropertyChanged("Pre_id");
					this.OnPre_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sag_id", DbType="Int")]
		public System.Nullable<int> Sag_id
		{
			get
			{
				return this._Sag_id;
			}
			set
			{
				if ((this._Sag_id != value))
				{
					this.OnSag_idChanging(value);
					this.SendPropertyChanging();
					this._Sag_id = value;
					this.SendPropertyChanged("Sag_id");
					this.OnSag_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
